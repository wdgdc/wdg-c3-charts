{"version":3,"file":"render.js","sources":["../src/config.js","../src/helper.js","../src/render.js"],"sourcesContent":["const config = window.wdg.charts.config || {};\n\nexport default config;","import defaultConfig from './config.js';\nimport { createBlock } from '@wordpress/blocks';\n\nexport function parseConfig( config, custom = {} ) {\n\tlet chartConfig = { ...defaultConfig, ...config, ...custom };\n\n\tchartConfig.data.axes = chartConfig.data.axes || {};\n\n\tif ( chartConfig.axis && chartConfig.axis.y && chartConfig.axis.y.secondary ) {\n\t\tchartConfig.data.axes = {};\n\n\t\tif ( chartConfig.data.rows.length > 0 ) {\n\t\t\tchartConfig.data.rows[0].filter( v => v ).forEach( row => {\n\t\t\t\tif ( ( Array.isArray( chartConfig.axis.y.secondary ) && chartConfig.axis.y.secondary.includes( row ) ) || chartConfig.axis.y.secondary === row ) {\n\t\t\t\t\tchartConfig.data.axes[ row ] = 'y2';\n\t\t\t\t} else {\n\t\t\t\t\tchartConfig.data.axes[ row ] = 'y';\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tchartConfig.axis.y2.show = Object.keys( chartConfig.data.axes ).map( key => chartConfig.data.axes[ key ] ).filter( y => y === 'y2' ).length > 0;\n\t\t} else {\n\t\t\t// leave it up to the chart type to decide\n\t\t}\n\t}\n\n\t// \"auto\" padding\n\tif ( chartConfig?.padding?.auto ) {\n\t\tdelete chartConfig.padding;\n\t}\n\n\t// ignoring caption\n\tif ( chartConfig.hasOwnProperty('caption') ) {\n\t\tdelete chartConfig.caption;\n\t}\n\n\t// apply custom timeseries formats\n\tif ( '%Y:$QQ' === chartConfig.axis.x.tick.format ) {\n\t\tchartConfig.axis.x.tick.format = function( d ) {\n\t\t\tconst quarters = [1,1,1,2,2,2,3,3,3,4,4,4];\n\t\t\treturn `${ d.getFullYear() }:Q${ quarters[ d.getMonth() ] }`;\n\t\t}\n\t} else if ( '%Y:$HH' === chartConfig.axis.x.tick.format ) {\n\t\tchartConfig.axis.x.tick.format = function( d ) {\n\t\t\treturn `${ d.getFullYear() }:H${ d.getMonth() <= 5 ? '1' : '2' }`;\n\t\t}\n\t}\n\n\tif ( chartConfig.axis && chartConfig.axis.y && chartConfig.axis.y.label && ! chartConfig.axis.y.label.text ) {\n\t\tdelete chartConfig.axis.y.label;\n\t}\n\n\t// add trend line to chart\n\tif ( chartConfig.trend && chartConfig.trend.show ) {\n\t\tconst trendCalc = calcDataTrend( chartConfig, chartConfig.trend.col );\n\n\t\tif ( trendCalc ) {\n\t\t\tconst label = chartConfig.trend.label || 'Trend';\n\n\t\t\tchartConfig.data.types = {\n\t\t\t\t...( config.data.types || {} ),\n\t\t\t\t[ label ]: 'line'\n\t\t\t};\n\n\t\t\tchartConfig.data.rows = [ ...chartConfig.data.rows ];\n\n\t\t\tfor ( let i = 0, len = chartConfig.data.rows.length; i < len; i++ ) {\n\t\t\t\tif ( i === 0 ) {\n\t\t\t\t\tchartConfig.data.rows[ i ] = [ ...chartConfig.data.rows[ i ], label ];\n\t\t\t\t} else {\n\t\t\t\t\tchartConfig.data.rows[ i ] = [ ...chartConfig.data.rows[ i ], trendCalc.values[ i - 1 ] ];\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\t// make the trend line always black\n\t\t\tchartConfig.color.pattern = [ ...chartConfig.color.pattern ];\n\n\t\t\tif ( chartConfig.data.rows[0][0] === '' ) {\n\t\t\t\tchartConfig.color.pattern[ chartConfig.data.rows[0].length - 2 ] = '#000000';\n\t\t\t} else {\n\t\t\t\tchartConfig.color.pattern[ chartConfig.data.rows[0].length - 1 ] = '#000000';\n\t\t\t}\n\t\t}\n\t}\n\n\treturn chartConfig;\n}\n\nexport function getBlockClassNames( config ) {\n\tconst classNames = [\n\t\t'wdg-c3-chart'\n\t];\n\n\tif ( config?.data?.type ) {\n\t\tclassNames.push( `wdg-c3-chart--${config.data.type}` );\n\n\t\tif ( [ 'line', 'bar', 'area', 'area-spline', 'spline' ].includes( config.data.type ) ) {\n\t\t\tif ( config?.grid?.x?.stroke ) {\n\t\t\t\tclassNames.push( `wdg-c3-chart--x-grid-line-${config.grid.x.stroke}` );\n\t\t\t}\n\n\t\t\tif ( config?.grid?.y?.stroke ) {\n\t\t\t\tclassNames.push( `wdg-c3-chart--y-grid-line-${config.grid.y.stroke}` );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn classNames;\n}\n\nexport const chartTypes = [\n\t'c3/area-spline',\n\t'c3/area',\n\t'c3/bar',\n\t'c3/donut',\n\t'c3/line',\n\t'c3/pie',\n\t'c3/scatter',\n\t'c3/spline',\n];\n\nexport function getBlockTransform( blockType ) {\n\treturn {\n\t\ttype: 'block',\n\t\tblocks: chartTypes.filter( chartType => chartType !== blockType ),\n\t\ttransform: ( attributes ) => createBlock( blockType, attributes ),\n\t}\n}\n\n/**\n * Mutates the c3.generate config object to add a data\n *\n * @param {object} config the object passed to c3.generate\n * @param {string} col\n * @param {string} type\n * @returns object\n *\n * @see https://github.com/heofs/trendline (inspired by)\n */\nexport function calcDataTrend( config ) {\n\tfunction average( arr ) {\n\t\treturn sum( arr ) / arr.length;\n\t}\n\n\tfunction sum( arr ) {\n\t\treturn arr.reduce( ( sum, val ) => sum + val, 0 );\n\t}\n\n\tlet rowIndex;\n\n\tif ( ! config.data.rows.length ) {\n\t\treturn;\n\t}\n\n\tif ( config.trend.col ) {\n\t\trowIndex = config.data.rows[0].indexOf( config.trend.col );\n\t} else if ( config.data.rows[0].length ) {\n\t\trowIndex = 0;\n\t}\n\n\tif ( rowIndex < 0 ) {\n\t\treturn null;\n\t}\n\n\tconst xData = [ ...Array(config.data.rows.length - 1).keys() ];\n\tconst yData = config.data.rows.slice(1).map( row => parseFloat( row[ rowIndex ] ) );\n\n\t// average of X values and Y values\n\tconst xMean = average(xData);\n\tconst yMean = average(yData);\n\n\t// Subtract X or Y mean from corresponding axis value\n\tconst xMinusxMean = xData.map( val => val - xMean );\n\tconst yMinusyMean = yData.map( val => val - yMean );\n\n\tconst xMinusxMeanSq = xMinusxMean.map((val) => Math.pow(val, 2));\n\n\tconst xy = [];\n\tfor ( let x = 0, len = config.data.rows.length; x < len - 1; x++ ) {\n\t\txy.push( xMinusxMean[x] * yMinusyMean[x] );\n\t}\n\n\tconst xySum = sum( xy );\n\n\t// b1 is the slope\n\tconst b1 = xySum / sum( xMinusxMeanSq );\n\t// b0 is the start of the slope on the Y axis\n\tconst b0 = yMean - b1 * xMean;\n\n\tconst values = [];\n\n\tfor( let i = 1, len = config.data.rows.length; i < len; i++ ) {\n\t\tvalues.push( b0 + b1 * xData[ i - 1 ] );\n\t}\n\n\treturn {\n\t\tslope: b1,\n\t\tyStart: b0,\n\t\tcalcY: (x) => b0 + b1 * x,\n\t\tvalues,\n\t};\n}\n","import c3 from 'c3';\nimport { parseConfig, getBlockClassNames } from './helper.js';\n\n/**\n * Adds css style inline so exporting to canvas understands them\n *\n * @param {SVGElement} node\n * @return undefined\n */\nexport function applyStylesInline( node ) {\n\tconst cs       = getComputedStyle(node);\n\tconst propsMap = {\n\t\ttext: [\n\t\t\t'color',\n\t\t\t'fill',\n\t\t\t'fontSize',\n\t\t\t'fontFamily',\n\t\t],\n\t\tdefault: [\n\t\t\t'backgroundColor',\n\t\t\t'color',\n\t\t\t'display',\n\t\t\t'fill',\n\t\t\t'opacity',\n\t\t\t'shapeRendering',\n\t\t\t'stroke',\n\t\t\t'strokeDasharray',\n\t\t\t'strokeDashoffset',\n\t\t\t'strokeOpacity',\n\t\t\t'strokeWidth',\n\t\t\t'visibility',\n\t\t]\n\t};\n\n\tconst props = propsMap[ node.tagName.toLowerCase() ] || propsMap.default;\n\n\tprops.forEach( prop => {\n\t\tif ( cs[ prop ] ) {\n\t\t\tnode.style[ prop ] = cs[ prop ];\n\t\t}\n\t} );\n}\n\n/**\n * Generate a data URI of a svg as an image\n *\n * @param {SVGElement} svgElement the SVG to generate a data uri for\n * @param {string} mimeType the mime type of the image (png, jpeg, webp)\n * @param {string} fillStyle background color\n * @returns {Promise}\n */\nexport function generateExport( svgElement, mimeType = 'image/png', fillStyle = '#ffffff' ) {\n\treturn new Promise( ( resolve, reject ) => {\n\t\tif ( ! svgElement instanceof SVGElement ) {\n\t\t\treturn reject( new Error( 'SVGElement is required' ) );\n\t\t}\n\n\t\tif ( ! mimeType.match( /^image\\// ) ) {\n\t\t\treturn reject( new Error( `Invalid mime type: ${mimeType}`) );\n\t\t}\n\n\t\tconst { height, width } = svgElement.getBoundingClientRect();\n\t\tconst svgClone          = svgElement.cloneNode(true);\n\t\tconst svgWrap           = document.createElement('div');\n\n\t\tsvgWrap.style.position      = 'absolute';\n\t\tsvgWrap.style.overflow      = 'hidden';\n\t\tsvgWrap.style.pointerEvents = 'none';\n\t\tsvgWrap.style.userSelect    = 'none';\n\t\tsvgWrap.style.height        = '1px';\n\t\tsvgWrap.style.width         = '1px';\n\n\t\t// cloned.style.position        = 'absolute';\n\t\tsvgClone.style.backgroundColor = '#fff';\n\t\tsvgClone.setAttribute('height', `${height * 2}px`);\n\t\tsvgClone.setAttribute('width', `${width * 2}px`);\n\t\tsvgClone.setAttribute('viewBox', `0 0 ${width} ${height}`);\n\n\t\tsvgElement.parentNode.insertBefore(svgWrap, svgElement);\n\t\tsvgWrap.appendChild(svgClone);\n\n\t\tsvgClone.querySelectorAll('path,text,circle,g,line,text').forEach(applyStylesInline);\n\n\t\tconst svgString = new XMLSerializer().serializeToString(svgClone);\n\t\tconst image     = new Image();\n\t\tconst canvas    = document.createElement('canvas');\n\t\tconst context   = canvas.getContext('2d');\n\n\t\tcanvas.width  = width * 2;\n\t\tcanvas.height = height * 2;\n\n\t\timage.onload = () => {\n\t\t\tcontext.fillStyle = fillStyle;\n\t\t\tcontext.drawImage(image, 0, 0);\n\t\t\tresolve(canvas.toDataURL(mimeType));\n\t\t\tsvgWrap.parentNode.removeChild(svgWrap);\n\t\t}\n\t\timage.onerror = reject;\n\t\timage.src = `data:image/svg+xml; charset=utf8, ${encodeURIComponent(svgString)}`;\n\t} );\n}\n\n/**\n *\n * @param {SVGElement} svg the SVG node to create the link for\n * @param {string} text the text of the link\n * @param {string} name name of the file to download\n * @returns HTMLAnchorElement\n */\nexport function createDownloadLink( svg, text = 'Download chart', name = 'chart.png' ) {\n\tconst link = document.createElement('a');\n\tlink.classList.add('wdg-c3-charts__export');\n\tlink.download  = name;\n\tlink.innerText = text;\n\n\t// always generate a new svg on click with a slight delay so we don't get stuck mid animation\n\tlink.onclick = (e) => {\n\t\te.preventDefault();\n\n\t\tsetTimeout( () => {\n\t\t\tgenerateExport( svg ).then( href => {\n\t\t\t\tconst dl = document.createElement('a');\n\t\t\t\tdl.download = link.download;\n\t\t\t\tdl.href = href;\n\t\t\t\tdl.click();\n\t\t\t} );\n\t\t}, 200 );\n\t};\n\n\treturn link;\n}\n\n/**\n *\n * @param {HTMLFigureElement} node the figure element that contains c3 configuration in data-c3-config\n * @returns c3\n */\nexport function render( node ) {\n\tlet   config     = {};\n\tconst configNode = node.querySelector('script[type=\"application/json\"]');\n\tconst c3Root     = document.createElement('div');\n\n\tif ( configNode ) {\n\t\ttry {\n\t\t\tconfig = JSON.parse( configNode.textContent );\n\t\t} catch( e ) {\n\t\t\tconsole.error( 'wdg-c3-charts: Invalid json', configNode.textContent );\n\t\t\treturn;\n\t\t}\n\n\t\tconfigNode.insertAdjacentElement( 'afterend', c3Root );\n\n\t\tconfig = parseConfig(\n\t\t\tconfig,\n\t\t\t{\n\t\t\t\tbindto: c3Root,\n\t\t\t}\n\t\t);\n\n\t\tconst classNames = getBlockClassNames( config );\n\n\t\tif ( classNames.length ) {\n\t\t\tclassNames.forEach( className => node.classList.add( className ) );\n\t\t}\n\n\t\tif ( true || config.download ) {\n\t\t\tlet link, svg;\n\t\t\tconst wrap = document.createElement('p');\n\t\t\twrap.classList.add('wdg-c3-charts__export-wrap');\n\n\t\t\tconfig.oninit = () => {\n\t\t\t\tsvg = node.querySelector('svg');\n\t\t\t\tlink = createDownloadLink(svg, config.downloadText || 'Download chart', config.downloadName || 'chart');\n\t\t\t\tnode.insertAdjacentElement('afterend', wrap);\n\t\t\t\twrap.appendChild(link);\n\t\t\t};\n\n\t\t\tconfig.onrendered = () => {\n\t\t\t\tgenerateExport(svg).then(href => link.href = href).catch(fault => console.error(fault.message));\n\t\t\t}\n\t\t}\n\t}\n\n \treturn c3.generate(config);\n}\n\nexport let charts;\n\ndocument.addEventListener( 'DOMContentLoaded', () => {\n\tcharts = Array.from( document.querySelectorAll( '.wdg-c3-chart' ) ).map( render );\n} );\n"],"names":["config","window","wdg","charts","parseConfig","custom","arguments","length","undefined","chartConfig","defaultConfig","data","axes","axis","y","secondary","rows","filter","v","forEach","row","Array","isArray","includes","y2","show","Object","keys","map","key","padding","auto","hasOwnProperty","caption","x","tick","format","d","getFullYear","getMonth","label","text","trend","trendCalc","calcDataTrend","col","types","i","len","values","color","pattern","average","arr","sum","reduce","val","rowIndex","indexOf","xData","yData","slice","parseFloat","xMean","yMean","xMinusxMean","yMinusyMean","xMinusxMeanSq","Math","pow","xy","push","b1","b0","slope","yStart","calcY","applyStylesInline","node","cs","getComputedStyle","propsMap","default","tagName","toLowerCase","prop","style","generateExport","svgElement","mimeType","fillStyle","Promise","resolve","reject","SVGElement","Error","match","height","width","getBoundingClientRect","svgClone","cloneNode","svgWrap","document","createElement","position","overflow","pointerEvents","userSelect","backgroundColor","setAttribute","parentNode","insertBefore","appendChild","querySelectorAll","svgString","XMLSerializer","serializeToString","image","Image","canvas","context","getContext","onload","drawImage","toDataURL","removeChild","onerror","src","encodeURIComponent","createDownloadLink","svg","name","link","classList","add","download","innerText","onclick","e","preventDefault","setTimeout","then","href","dl","click","render","configNode","querySelector","c3Root","JSON","parse","textContent","console","error","insertAdjacentElement","bindto","classNames","type","grid","stroke","getBlockClassNames","className","wrap","oninit","downloadText","downloadName","onrendered","catch","fault","message","c3","generate","exports","addEventListener","from"],"mappings":"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"}