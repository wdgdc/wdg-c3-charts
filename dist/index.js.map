{"version":3,"file":"index.js","sources":["../src/components/csv-control.js","../src/config.js","../src/components/chart.js","../src/helper.js","../src/components/chart-control.js","../src/blocks/area/index.js","../src/blocks/area-spline/index.js","../src/blocks/bar/index.js","../src/blocks/donut/index.js","../src/blocks/line/index.js","../src/blocks/pie/index.js","../src/blocks/spline/index.js"],"sourcesContent":["import { BaseControl, Button, Spinner } from '@wordpress/components';\nimport { MediaUpload, MediaUploadCheck, MediaPlaceholder } from '@wordpress/block-editor';\nimport { useSelect } from '@wordpress/data';\n\nexport default function CSVControl( {\n\taccept = \"text/csv\", // pass false to accept all types\n\taddToGallery = false,\n\tallowedTypes = [ \"text/csv\" ], // pass null to allow all types\n\thelp,\n\tlabel,\n\tlabels = { title: 'Select CSV File', instructions: '' },\n\tonSelect,\n\tremoveMediaLabel = 'Remove CSV File',\n\tvalue,\n\tmultiple = false,\n} ) {\n\tconst media = useSelect( select => select('core').getMedia( value ), [ value ] );\n\n\treturn (\n\t\t<BaseControl label={ label } help={ help }>\n\t\t\t<div className=\"wikit-charts-csv-control\">\n\t\t\t\t{ value ? (\n\t\t\t\t\t<MediaUploadCheck>\n\t\t\t\t\t\t<MediaUpload\n\t\t\t\t\t\t\tallowedTypes={ allowedTypes }\n\t\t\t\t\t\t\tvalue={ value }\n\t\t\t\t\t\t\tonSelect={ media => onSelect( media ) }\n\t\t\t\t\t\t\trender={ ( { open } ) => (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tonClick={ open }\n\t\t\t\t\t\t\t\t\t\ticon=\"media-spreadsheet\"\n\t\t\t\t\t\t\t\t\t\tisSecondary\n\t\t\t\t\t\t\t\t\t\tisBusy={ value && ! media }\n\t\t\t\t\t\t\t\t\t\tstyle={ { width: '100%', justifyContent: 'center' } }\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{ media ? media.source_url.split('/').pop() : <Spinner /> }\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</MediaUploadCheck>\n\t\t\t\t) : (\n\t\t\t\t\t<MediaUploadCheck fallback=\"You do not have the upload media capability.\">\n\t\t\t\t\t\t<MediaPlaceholder\n\t\t\t\t\t\t\taccept={ accept }\n\t\t\t\t\t\t\taddToGallery={ addToGallery }\n\t\t\t\t\t\t\tallowedTypes={ allowedTypes }\n\t\t\t\t\t\t\tlabels={ labels }\n\t\t\t\t\t\t\tonSelect={ media => onSelect( media ) }\n\t\t\t\t\t\t\tmultiple={ multiple }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</MediaUploadCheck>\n\t\t\t\t) }\n\t\t\t</div>\n\t\t</BaseControl>\n\t)\n}\n","const config = window.wdg.charts.config || {};\n\nexport default config;","import { useSelect } from '@wordpress/data';\nimport { useEffect, useRef, useState } from '@wordpress/element';\nimport { Spinner } from '@wordpress/components';\nimport c3 from 'c3';\nimport config from '../config.js';\nimport { parseConfig } from '../helper.js';\nimport { merge } from 'lodash';\n\nexport default function Chart( {\n\tfile = 0,\n\ttype,\n\tattributes,\n\tsetAttributes,\n\t...props\n} ) {\n\tconst data = useSelect( select => select('core').getMedia( file ), [ file ] );\n\tconst ref  = useRef();\n\tconst [ chart, setChart ] = useState(null);\n\n\tconsole.log( { attributes } );\n\n\tuseEffect( () => {\n\t\tconst timeout = setTimeout( () => {\n\t\t\tif ( data && data.source_url ) {\n\t\t\t\tconst chartConfig = parseConfig(\n\t\t\t\t\tattributes,\n\t\t\t\t\t{\n\t\t\t\t\t\tbindto: ref.current,\n\t\t\t\t\t\tdata: merge(\n\t\t\t\t\t\t\tattributes.data,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\turl: data.source_url,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tconsole.log( 'chartConfig', chartConfig );\n\n\t\t\t\tsetChart( c3.generate( chartConfig ) );\n\t\t\t}\n\t\t}, 350 );\n\n\t\treturn () => {\n\t\t\tif ( timeout ) {\n\t\t\t\tclearTimeout( timeout );\n\t\t\t}\n\t\t}\n\t}, [\n\t\tdata,\n\t\tref.current,\n\t\tattributes,\n\t] );\n\n\tif ( ! file ) {\n\t\treturn null;\n\t}\n\n\tif ( ! data ) {\n\t\treturn <Spinner />\n\t}\n\n\treturn (\n\t\t<div ref={ ref } {...props} />\n\t);\n}\n","import defaultConfig from './config.js';\n\nexport function parseConfig( config, custom = {} ) {\n\tconst chartConfig = Object.assign( defaultConfig, config, custom );\n\t// console.log( 1, {chartConfig} );\n\n\tchartConfig.data.axes = chartConfig.data.axes || {};\n\n\tif ( chartConfig.axis && chartConfig.axis.y ) {\n\t\tif ( chartConfig.axis.y.primary ) {\n\t\t\tchartConfig.data.axes[ chartConfig.axis.y.primary ] = 'y';\n\t\t}\n\n\t\tif ( chartConfig.axis.y.secondary ) {\n\t\t\tchartConfig.data.axes[ chartConfig.axis.y.secondary ] = 'y2';\n\t\t\tchartConfig.axis.y2 = { show: true };\n\t\t} else {\n\t\t\tchartConfig.axis.y2 = { show: false };\n\t\t}\n\t}\n\n\t// console.log( 2, {chartConfig} );\n\n\treturn chartConfig;\n}\n","import {\n\tBlockControls,\n\tInspectorControls,\n\tMediaReplaceFlow,\n} from '@wordpress/block-editor';\n\nimport {\n\tBaseControl,\n\tButton,\n\tFlex,\n\tFlexBlock,\n\tFlexItem,\n\tIcon,\n\tPanel,\n\tPanelBody,\n\tPanelRow,\n\tSelectControl,\n\tTextControl,\n\tToggleControl,\n\tToolbar,\n} from '@wordpress/components';\n\nimport { useSelect } from '@wordpress/data';\nimport CSVControl from \"./csv-control.js\";\nimport Chart from \"./chart.js\";\nimport {\n\tcloneDeep,\n\tget,\n\tmerge,\n\tset,\n\tunset,\n} from 'lodash';\n\nconst allowedTypes = [ 'text/csv', 'application/vnd.ms-excel' ];\n\nexport default function ChartControl( {\n\ttype,\n\tattributes,\n\tsetAttributes,\n\tchildren,\n} ) {\n\tconst media = useSelect( select => select('core').getMedia( attributes.file ), [ attributes.file ] );\n\n\tconst onCSVSelect = ( file ) => {\n\t\tconst attrs = cloneDeep( attributes );\n\t\tattrs.file = file.id;\n\t\tattrs.data = merge( attrs.data || {}, { source_url: file.source_url } );\n\t\tsetAttributes( attrs );\n\t}\n\n\tconst setAttr = ( attr, value ) => {\n\t\tconst attrs = cloneDeep( attributes );\n\t\tset( attrs, attr, value );\n\t\tsetAttributes( attrs );\n\t}\n\n\tconst setAttrs = ( attrMap = {} ) => {\n\t\tconst attrs = cloneDeep( attributes );\n\t\tObject.keys( attrMap ).forEach( attr => set( attrs, attr, attrMap[ attr ] ) );\n\t\tsetAttributes( attrs );\n\t}\n\n\tconst unsetAttr = ( attr ) => {\n\t\tconst attrs = cloneDeep( attributes );\n\t\tunset( attrs, attr );\n\t\tsetAttributes( attrs );\n\t}\n\n\tconst getAttr = ( attr, def = '' ) => {\n\t\treturn get( attributes, attr, def );\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<InspectorControls>\n\t\t\t\t<Panel>\n\t\t\t\t\t<PanelBody title=\"Data\" initialOpen>\n\t\t\t\t\t\t<CSVControl\n\t\t\t\t\t\t\tvalue={ getAttr( 'file' ) }\n\t\t\t\t\t\t\tonSelect={ onCSVSelect }\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\tlabel=\"Labels\"\n\t\t\t\t\t\t\t\tchecked={ getAttr( 'data.labels', true ) }\n\t\t\t\t\t\t\t\tonChange={ labels => setAttr( 'data.labels', labels ) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t</PanelBody>\n\n\t\t\t\t\t{ [ 'line' ].includes( type ) && (\n\t\t\t\t\t\t<PanelBody title=\"Line Chart\" initialOpen>\n\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\tlabel=\"Show Points\"\n\t\t\t\t\t\t\t\tchecked={ getAttr( 'point.show', true ) }\n\t\t\t\t\t\t\t\tonChange={ show => setAttr( 'point.show', show ) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t) }\n\n\t\t\t\t\t<PanelBody title=\"Legend\" initialOpen={ false }>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel=\"Legend\"\n\t\t\t\t\t\t\tchecked={ getAttr( 'legend.show', true ) }\n\t\t\t\t\t\t\tonChange={ show => setAttr( 'legend.show', show ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\tlabel=\"Legend Position\"\n\t\t\t\t\t\t\tvalue={ getAttr( 'legend.position' ) }\n\t\t\t\t\t\t\toptions={ [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: 'Bottom',\n\t\t\t\t\t\t\t\t\tvalue: 'bottom',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: 'Right',\n\t\t\t\t\t\t\t\t\tvalue: 'right',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t] }\n\t\t\t\t\t\t\tonChange={ position => setAttr( 'legend.position', position ) }\n\t\t\t\t\t\t\tdisabled={ ! getAttr( 'legend.show' ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelBody>\n\n\t\t\t\t\t<PanelBody title=\"Tooltip\" initialOpen={ false }>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel=\"Tooltip\"\n\t\t\t\t\t\t\tchecked={ getAttr( 'tooltip.show', true ) }\n\t\t\t\t\t\t\tonChange={ show => setAttr( 'tooltip.show', show ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel=\"Group Tooltip\"\n\t\t\t\t\t\t\tchecked={ getAttr( 'tooltip.grouped', false ) }\n\t\t\t\t\t\t\tonChange={ grouped => setAttr( 'tooltip.grouped', grouped ) }\n\t\t\t\t\t\t\tdisabled={ ! getAttr( 'tooltip.show', true ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelBody>\n\n\t\t\t\t\t{ [ 'line', 'bar', 'spline', 'area', 'area-spline' ].includes( type ) && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<PanelBody title=\"X Axis\" initialOpen={ false }>\n\t\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t\tlabel=\"Show\"\n\t\t\t\t\t\t\t\t\tchecked={ getAttr( 'axis.x.show', true ) }\n\t\t\t\t\t\t\t\t\tonChange={ show => setAttr( 'axis.x.show', show ) }\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\t\t\tlabel=\"Type\"\n\t\t\t\t\t\t\t\t\tvalue={ getAttr( 'axis.x.type', 'indexed' ) }\n\t\t\t\t\t\t\t\t\toptions={ [\n\t\t\t\t\t\t\t\t\t\t{ value: 'indexed', label: 'Default' },\n\t\t\t\t\t\t\t\t\t\t{ value: 'timeseries', label: 'Timeseries' },\n\t\t\t\t\t\t\t\t\t\t{ value: 'category', label: 'Category' },\n\t\t\t\t\t\t\t\t\t] }\n\t\t\t\t\t\t\t\t\tonChange={ type => {\n\t\t\t\t\t\t\t\t\t\tconst attrs = cloneDeep( attributes );\n\t\t\t\t\t\t\t\t\t\tattrs.axis.x.type = type;\n\n\t\t\t\t\t\t\t\t\t\tif ( type === 'timeseries' ) {\n\t\t\t\t\t\t\t\t\t\t\tattrs.axis.x.format = '%Y-%m-%d';\n\t\t\t\t\t\t\t\t\t\t\tattrs.data.x = get( media, 'c3ChartData.headers[0]', '' );\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tdelete attrs.axis.x.format;\n\t\t\t\t\t\t\t\t\t\t\tdelete attrs.data.x;\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tsetAttributes( attrs );\n\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\tdisabled={ ! getAttr( 'axis.x.show', false ) }\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t{ getAttr( 'axis.x.type' ) === 'category' && (\n\t\t\t\t\t\t\t\t\t<BaseControl label=\"Categories\" help=\"Enter the categories for the X axis labels\">\n\t\t\t\t\t\t\t\t\t\t{ getAttr( 'axis.x.categories', [] ).map( ( category, index ) => (\n\t\t\t\t\t\t\t\t\t\t\t<Flex key={ index } align=\"center\">\n\t\t\t\t\t\t\t\t\t\t\t\t<FlexBlock>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={ category }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={ category => setAttr( `axis.x.categories[${index}]`, category ) }\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</FlexBlock>\n\t\t\t\t\t\t\t\t\t\t\t\t<FlexItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisLink\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisDestructive\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={ () => setAttr( 'axis.x.categories', getAttr( 'axis.x.categories' ).filter( ( cat, catIndex ) => catIndex !== index ) ) }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={ { textDecoration: 'none', marginBottom: '8px' } }\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon icon=\"dismiss\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t</FlexItem>\n\t\t\t\t\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t\t\t\t) ) }\n\n\t\t\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\tisLink\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst values = [...getAttr( 'axis.x.categories', [] ) ];\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalues.push( '' );\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetAttr( 'axis.x.categories', values );\n\t\t\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\tAdd Category\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t\t\t\t\t</BaseControl>\n\t\t\t\t\t\t\t\t) }\n\n\t\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\t\tlabel=\"Label Text\"\n\t\t\t\t\t\t\t\t\tvalue={ getAttr( 'axis.x.label.text', '' ) }\n\t\t\t\t\t\t\t\t\tonChange={ text => setAttr( 'axis.x.label.text', text ) }\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\t\t\tlabel=\"Label Position\"\n\t\t\t\t\t\t\t\t\toptions={ [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'inner-right',\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Inner Right',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'inner-center',\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Inner Center',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'inner-left',\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Inner Left',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'outer-right',\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Outer Right',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'outer-center',\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Outer Center',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'outer-left',\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Outer Left',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t] }\n\t\t\t\t\t\t\t\t\tvalue={ getAttr( 'axis.x.label.position', 'inner-right' ) }\n\t\t\t\t\t\t\t\t\tonChange={ position => setAttr( 'axis.x.label.position', position ) }\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\t\tlabel=\"Tick Culling\"\n\t\t\t\t\t\t\t\t\thelp=\"Set the maximum number of ticks. 0 means all will be shown.\"\n\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\tvalue={ getAttr( 'axis.x.tick.culling.max', 0 ) }\n\t\t\t\t\t\t\t\t\tonChange={ max => setAttr( 'axis.x.tick.culling.max', max ) }\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<BaseControl label=\"Manual Ticks\" help=\"Manually enter the ticks to be shown. They will automatically be placed on the axis based on the available data.\">\n\t\t\t\t\t\t\t\t\t{ getAttr( 'axis.x.tick.values', [] ).map( ( value, index ) => (\n\t\t\t\t\t\t\t\t\t\t<Flex key={ index } align=\"center\">\n\t\t\t\t\t\t\t\t\t\t\t<FlexBlock>\n\t\t\t\t\t\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={ value }\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={ value => setAttr( `axis.x.tick.values[${index}]`, value ) }\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</FlexBlock>\n\t\t\t\t\t\t\t\t\t\t\t<FlexItem>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tisLink\n\t\t\t\t\t\t\t\t\t\t\t\t\tisDestructive\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// remove attribute when the last tick as c3 interprets as 0 instead of not defined\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ( attributes.axis.x.tick.values.length > 1 ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetAttr( 'axis.x.tick.values', attributes.axis.x.tick.values.filter( ( val, valIndex ) => valIndex !== index ) )\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tunsetAttr( 'axis.x.tick.values' );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={ { textDecoration: 'none', marginBottom: '8px' } }\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon icon=\"dismiss\" />\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</FlexItem>\n\t\t\t\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t\t\t) ) }\n\n\t\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tisLink\n\t\t\t\t\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst values = [...getAttr( 'axis.x.tick.values', [] ) ];\n\t\t\t\t\t\t\t\t\t\t\t\tvalues.push( '' );\n\t\t\t\t\t\t\t\t\t\t\t\tsetAttr( 'axis.x.tick.values', values );\n\t\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tAdd Manual Tick Value\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t\t\t\t</BaseControl>\n\n\t\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\t\tlabel=\"Tick Rotation (Degrees: 0 - 359)\"\n\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t\t\t\tmax=\"359\"\n\t\t\t\t\t\t\t\t\tvalue={ getAttr( 'axis.x.tick.rotate') }\n\t\t\t\t\t\t\t\t\tonChange={ rotate => setAttr( 'axis.x.tick.rotate', Math.min( Math.max( rotate, 0 ), 359 ) ) }\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t\tlabel=\"Multiline Tick\"\n\t\t\t\t\t\t\t\t\tchecked={ getAttr( 'axis.x.tick.multiline', true ) }\n\t\t\t\t\t\t\t\t\tonChange={ multiline => setAttr( 'axis.x.tick.multiline', multiline ) }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PanelBody>\n\n\t\t\t\t\t\t\t<PanelBody title=\"Y Axis\" initialOpen={ false }>\n\t\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t\tlabel=\"Show\"\n\t\t\t\t\t\t\t\t\tchecked={ getAttr( 'axis.y.show', true ) }\n\t\t\t\t\t\t\t\t\tonChange={ show => setAttr( 'axis.y.show', show ) }\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\t\tlabel=\"Label Text\"\n\t\t\t\t\t\t\t\t\tvalue={ getAttr( 'axis.y.label.text', '' ) }\n\t\t\t\t\t\t\t\t\tonChange={ text => setAttr( 'axis.y.label.text', text ) }\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\t\t\tlabel=\"Label Position\"\n\t\t\t\t\t\t\t\t\toptions={ [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'inner-top',\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Inner Top',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'inner-middle',\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Inner Middle',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'inner-bottom',\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Inner Bottom',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'outer-top',\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Outer Top',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'outer-middle',\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Outer Middle',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'outer-bottom',\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Outer Bottom',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t] }\n\t\t\t\t\t\t\t\t\tvalue={ getAttr( 'axis.y.label.position', 'inner-top' ) }\n\t\t\t\t\t\t\t\t\tonChange={ position => setAttr( 'axis.y.label.position', position ) }\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t{ media && media.c3ChartData && media.c3ChartData.headers && (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Primary Y Axis\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={ getAttr( 'axis.y.primary', '' ) }\n\t\t\t\t\t\t\t\t\t\t\toptions={ [ { value: '', label: 'Default' } ].concat( media.c3ChartData.headers.map( header => ( { value: header, label: header } ) ) ) }\n\t\t\t\t\t\t\t\t\t\t\tonChange={ primary => setAttr( 'axis.y.primary', primary ) }\n\t\t\t\t\t\t\t\t\t\t\tdisabled={ ! getAttr( 'axis.y.show', true ) }\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Secondary Y Axis\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={ getAttr( 'axis.y.secondary' ) }\n\t\t\t\t\t\t\t\t\t\t\toptions={ [ { value: '', label: 'None' } ].concat( media.c3ChartData.headers.map( header => ( { value: header, label: header } ) ) ) }\n\t\t\t\t\t\t\t\t\t\t\tonChange={ secondary => setAttr( 'axis.y.secondary', secondary ) }\n\t\t\t\t\t\t\t\t\t\t\tdisabled={ ! getAttr( 'axis.y.show', true ) }\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t) }\n\n\t\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\t\tlabel=\"Tick Count\"\n\t\t\t\t\t\t\t\t\thelp=\"Set the number of y axis ticks. Leave empty to automatically calculate tick values.\"\n\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\tvalue={ getAttr( 'axis.y.tick.count', 0 ) > 0 ? getAttr( 'axis.y.tick.count' ) : '' }\n\t\t\t\t\t\t\t\t\tonChange={ count => setAttr( 'axis.y.tick.count', Number( count ) ) }\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<BaseControl label=\"Manual Ticks\" help=\"Manually enter the ticks to be shown. They will automatically be placed on the axis based on the available data.\">\n\t\t\t\t\t\t\t\t\t{ getAttr( 'axis.y.tick.values', [] ).map( ( value, index ) => (\n\t\t\t\t\t\t\t\t\t\t<Flex key={ index } align=\"center\">\n\t\t\t\t\t\t\t\t\t\t\t<FlexBlock>\n\t\t\t\t\t\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={ value }\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={ value => setAttr( `axis.y.tick.values[${index}]`, value ) }\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</FlexBlock>\n\t\t\t\t\t\t\t\t\t\t\t<FlexItem>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tisLink\n\t\t\t\t\t\t\t\t\t\t\t\t\tisDestructive\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// remove attribute when the last tick as c3 interprets as 0 instead of not defined\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ( attributes.axis.y.tick.values.length > 1 ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetAttr( 'axis.y.tick.values', attributes.axis.y.tick.values.filter( ( val, valIndex ) => valIndex !== index ) )\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tunsetAttr( 'axis.y.tick.values' );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={ { textDecoration: 'none', marginBottom: '8px' } }\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon icon=\"dismiss\" />\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</FlexItem>\n\t\t\t\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t\t\t) ) }\n\n\t\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tisLink\n\t\t\t\t\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst values = [...getAttr( 'axis.y.tick.values', [] ) ];\n\t\t\t\t\t\t\t\t\t\t\t\tvalues.push( '' );\n\t\t\t\t\t\t\t\t\t\t\t\tsetAttr( 'axis.y.tick.values', values );\n\t\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tAdd Manual Tick Value\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t\t\t\t</BaseControl>\n\t\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) }\n\n\t\t\t\t\t{ [ 'line', 'bar', 'area', 'area-spline', 'spline' ].includes( type ) && (\n\t\t\t\t\t\t<PanelBody title=\"Grid\" initialOpen={ false }>\n\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t\tlabel=\"Show X Axis Grid\"\n\t\t\t\t\t\t\t\t\tchecked={ getAttr( 'grid.x.show', false ) }\n\t\t\t\t\t\t\t\t\tonChange={ show => setAttr( 'grid.x.show', show ) }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t\t{ getAttr( 'grid.x.lines', [] ).length ?\n\t\t\t\t\t\t\t\tgetAttr( 'grid.x.lines' ).map( ( line, index ) => (\n\t\t\t\t\t\t\t\t\t<div key={ index }>\n\t\t\t\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Line Value\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={ line.value }\n\t\t\t\t\t\t\t\t\t\t\tonChange={ value => setAttr( `grid.x.lines[${index}].value`, value ) }\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Line Label\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={ line.text }\n\t\t\t\t\t\t\t\t\t\t\tonChange={ text => setAttr( `grid.x.lines[${index}].text`, text ) }\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Label Position\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={ line.position }\n\t\t\t\t\t\t\t\t\t\t\tonChange={ position => setAttr( `grid.x.lines[${index}].position`, position ) }\n\t\t\t\t\t\t\t\t\t\t\toptions={ [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: 'End',\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'middle',\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: 'Middle',\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'start',\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: 'Start',\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t] }\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tisLink\n\t\t\t\t\t\t\t\t\t\t\tisDestructive\n\t\t\t\t\t\t\t\t\t\t\tonClick={ () => setAttr( 'grid.x.lines', attributes.grid.x.lines.filter( ( line, lineIndex ) => lineIndex !== index ) ) }\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tRemove Grid Line\n\t\t\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) ) : null\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tisLink\n\t\t\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\t\t\tconst lines = [...attributes.grid.x.lines];\n\t\t\t\t\t\t\t\t\t\tlines.push( {\n\t\t\t\t\t\t\t\t\t\t\tvalue: 0,\n\t\t\t\t\t\t\t\t\t\t\ttext: 'Grid Line',\n\t\t\t\t\t\t\t\t\t\t\tposition: ''\n\t\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t\t\tsetAttr( 'grid.x.lines', lines );\n\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tAdd X Grid Line\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t\tlabel=\"Show Gridline Y Axis\"\n\t\t\t\t\t\t\t\t\tchecked={ getAttr( 'grid.y.show', false ) }\n\t\t\t\t\t\t\t\t\tonChange={ show => setAttr( 'grid.y.show', show ) }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t\t{ getAttr( 'grid.y.lines', [] ).length ?\n\t\t\t\t\t\t\t\tgetAttr( 'grid.y.lines' ).map( ( line, index ) => (\n\t\t\t\t\t\t\t\t\t<div key={ index }>\n\t\t\t\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Line Value\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={ line.value }\n\t\t\t\t\t\t\t\t\t\t\tonChange={ value => setAttr( `grid.y.lines[${index}].value`, value ) }\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Line Label\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={ line.text }\n\t\t\t\t\t\t\t\t\t\t\tonChange={ value => setAttr( `grid.y.lines[${index}].text`, value ) }\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Label Position\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={ line.position }\n\t\t\t\t\t\t\t\t\t\t\tonChange={ position => setAttr( `grid.x.lines[${index}].position`, position ) }\n\t\t\t\t\t\t\t\t\t\t\toptions={ [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: 'End',\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'middle',\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: 'Middle',\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'start',\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: 'Start',\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t] }\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tisLink\n\t\t\t\t\t\t\t\t\t\t\tisDestructive\n\t\t\t\t\t\t\t\t\t\t\tonClick={ () => setAttr( 'grid.y.lines', attributes.grid.y.lines.filter( ( line, lineIndex ) => lineIndex !== index ) ) }\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tRemove Grid Line\n\t\t\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) ) : null\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tisLink\n\t\t\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\t\t\tconst lines = [...attributes.grid.y.lines];\n\t\t\t\t\t\t\t\t\t\tlines.push( {\n\t\t\t\t\t\t\t\t\t\t\tvalue: 0,\n\t\t\t\t\t\t\t\t\t\t\ttext: 'Grid Line',\n\t\t\t\t\t\t\t\t\t\t\tposition: ''\n\t\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t\t\tsetAttr( 'grid.y.lines', lines );\n\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tAdd Y Grid Line\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t) }\n\n\t\t\t\t\t{ [ 'line', 'bar', 'area', 'area-spline', 'spline' ].includes( type ) && (\n\t\t\t\t\t\t<PanelBody title=\"Regions\" initialOpen={ false }>\n\t\t\t\t\t\t\t{ attributes.regions && attributes.regions.map( ( region, index ) => (\n\t\t\t\t\t\t\t\t<div key={ index }>\n\t\t\t\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\t\t\t\tlabel=\"Axis\"\n\t\t\t\t\t\t\t\t\t\tvalue={ region.axis }\n\t\t\t\t\t\t\t\t\t\tonChange={ value => setAttr( `regions[${index}].axis`, value ) }\n\t\t\t\t\t\t\t\t\t\toptions={ [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'x',\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: 'X Axis',\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'y',\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: 'Y Axis',\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'y2',\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: 'Secondary Y Axis',\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled: ! getAttr( 'axis.y.secondary', false ),\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t] }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\t\t\tlabel=\"Start\"\n\t\t\t\t\t\t\t\t\t\tvalue={ region.start }\n\t\t\t\t\t\t\t\t\t\tonChange={ start => setAttr( `regions[${index}].start`, start ) }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\t\t\tlabel=\"End\"\n\t\t\t\t\t\t\t\t\t\tvalue={ region.end }\n\t\t\t\t\t\t\t\t\t\tonChange={ end => setAttr( `regions[${index}].end`, end ) }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tisLink\n\t\t\t\t\t\t\t\t\t\tisDestructive\n\t\t\t\t\t\t\t\t\t\tonClick={ () => setAttr( 'regions', attributes.regions.filter( r, regionIndex => regionIndex !== index ) ) }\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tRemove Region\n\t\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) ) }\n\n\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tisLink\n\t\t\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\t\t\tconst regions = [...attributes.regions];\n\t\t\t\t\t\t\t\t\t\tregions.push( {\n\t\t\t\t\t\t\t\t\t\t\taxis: 'x',\n\t\t\t\t\t\t\t\t\t\t\tstart: 0,\n\t\t\t\t\t\t\t\t\t\t\tend: 10,\n\t\t\t\t\t\t\t\t\t\t\tclass: '',\n\t\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t\t\tsetAttr( 'regions', regions );\n\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tAdd Region\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t) }\n\n\t\t\t\t\t<PanelBody title=\"Experimental\" initialOpen={ false }>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel=\"Zoom Enabled\"\n\t\t\t\t\t\t\tchecked={ attributes.zoom }\n\t\t\t\t\t\t\tonChange={ zoom => setAttr( 'zoom', zoom ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel=\"Sub Chart\"\n\t\t\t\t\t\t\tchecked={ attributes.subchart }\n\t\t\t\t\t\t\tonChange={ subchart => setAttr( 'subchart', subchart ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</Panel>\n\t\t\t</InspectorControls>\n\n\t\t\t<BlockControls>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<MediaReplaceFlow\n\t\t\t\t\t\tmedia={ media && media.source_url ? media.source_url : '' }\n\t\t\t\t\t\tmediaId={ attributes.file }\n\t\t\t\t\t\tallowedTypes={ allowedTypes }\n\t\t\t\t\t\taccept={ allowedTypes.join(',') }\n\t\t\t\t\t\tonSelect={ onCSVSelect }\n\t\t\t\t\t\tname={ attributes.file ? 'Replace CSV Data File' : 'Select CSV Data File' }\n\t\t\t\t\t/>\n\t\t\t\t</Toolbar>\n\t\t\t</BlockControls>\n\n\t\t\t{ attributes.file ? (\n\t\t\t\tchildren ? (\n\t\t\t\t\tchildren\n\t\t\t\t) : (\n\t\t\t\t\t<Chart\n\t\t\t\t\t\ttype={ type }\n\t\t\t\t\t\tfile={ attributes.file }\n\t\t\t\t\t\tattributes={ attributes }\n\t\t\t\t\t\tsetAttributes={ setAttributes }\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t) : (\n\t\t\t\t<CSVControl\n\t\t\t\t\tvalue={ attributes.file }\n\t\t\t\t\tonSelect={ onCSVSelect }\n\t\t\t\t/>\n\t\t\t) }\n\t\t</>\n\t);\n}\n","import block from './block.json';\nimport schema from '../schema.json';\nimport { registerBlockType } from '@wordpress/blocks';\nimport { InspectorControls, BlockControls, useBlockProps } from '@wordpress/block-editor';\nimport ChartControl from \"../../components/chart-control.js\";\nimport { PanelBody, Toolbar, ToggleControl } from '@wordpress/components';\nimport _ from 'lodash';\n\nblock.attributes = _.merge( _.cloneDeep( schema ), block.attributes || {} );\n\nblock.edit = ( { attributes, setAttributes } ) => {\n\treturn (\n\t\t<figure {...useBlockProps( { className: 'c3-chart c3-chart--area' } ) }>\n\t\t\t<ChartControl\n\t\t\t\ttype=\"area\"\n\t\t\t\tattributes={ attributes }\n\t\t\t\tsetAttributes={ setAttributes }\n\t\t\t/>\n\t\t</figure>\n\t);\n}\n\nblock.save = () => null;\n\nregisterBlockType( block.name, block );\n","import block from './block.json';\nimport schema from '../schema.json';\nimport { registerBlockType } from '@wordpress/blocks';\nimport { useBlockProps } from '@wordpress/block-editor';\nimport ChartControl from \"../../components/chart-control.js\";\nimport _ from 'lodash';\n\nblock.attributes = _.merge( _.cloneDeep( schema ), block.attributes || {} );\n\nblock.edit = ( { attributes, setAttributes } ) => {\n\treturn (\n\t\t<figure {...useBlockProps( { className: 'c3-chart c3-chart--area-spline' } ) }>\n\t\t\t<ChartControl\n\t\t\t\ttype=\"area-spline\"\n\t\t\t\tattributes={ attributes }\n\t\t\t\tsetAttributes={ setAttributes }\n\t\t\t/>\n\t\t</figure>\n\t);\n}\n\nblock.save = () => null;\n\nregisterBlockType( block.name, block );\n","import block from './block.json';\nimport schema from '../schema.json';\nimport { registerBlockType } from '@wordpress/blocks';\nimport { InspectorControls, BlockControls, useBlockProps } from '@wordpress/block-editor';\nimport ChartControl from \"../../components/chart-control.js\";\nimport { PanelBody, Toolbar, ToggleControl, Spinner } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\nimport _ from 'lodash';\n\nblock.attributes = _.merge( _.cloneDeep( schema ), block.attributes || {} );\n\nblock.edit = ( { attributes, setAttributes } ) => {\n\tconst media = useSelect( select => select('core').getMedia( attributes.file ), [ attributes.file ] );\n\n\treturn (\n\t\t<figure {...useBlockProps( { className: 'c3-chart c3-chart--bar' } ) }>\n\t\t\t<ChartControl\n\t\t\t\ttype=\"bar\"\n\t\t\t\tattributes={ attributes }\n\t\t\t\tsetAttributes={ setAttributes }\n\t\t\t\tcontrols={ () => (\n\t\t\t\t\t<PanelBody title=\"Bar Chart\" initialOpen icon={ block.icon }>\n\t\t\t\t\t\t{ media ? (\n\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\tlabel=\"Stacked Bar Chart\"\n\t\t\t\t\t\t\t\tchecked={ attributes.data && attributes.data.groups && attributes.data.groups.length > 0 }\n\t\t\t\t\t\t\t\tonChange={ checked => {\n\t\t\t\t\t\t\t\t\tconst attr = cloneDeep( attributes );\n\t\t\t\t\t\t\t\t\tattr.data = attr.data || {};\n\t\t\t\t\t\t\t\t\tconsole.log( { attr } );\n\t\t\t\t\t\t\t\t\tattr.data.groups = checked ? [ media.c3ChartData.headers ] : [];\n\t\t\t\t\t\t\t\t\tsetAttributes( attr );\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : <Spinner /> }\n\t\t\t\t\t</PanelBody>\n\t\t\t\t) }\n\n\t\t\t/>\n\t\t</figure>\n\t);\n}\n\nblock.save = () => null;\n\nregisterBlockType( block.name, block );\n","import block from './block.json';\nimport schema from '../schema.json';\nimport { registerBlockType } from '@wordpress/blocks';\nimport { useBlockProps } from '@wordpress/block-editor';\nimport { Panel, PanelBody, ToggleControl } from '@wordpress/components';\nimport ChartControl from \"../../components/chart-control.js\";\nimport _ from 'lodash';\n\nblock.attributes = _.merge( _.cloneDeep( schema ), block.attributes || {} );\n\nblock.edit = ( { attributes, setAttributes } ) => {\n\treturn (\n\t\t<figure {...useBlockProps( { className: 'c3-chart c3-chart--donut' } ) }>\n\t\t\t<ChartControl\n\t\t\t\ttype=\"donut\"\n\t\t\t\tattributes={ attributes }\n\t\t\t\tsetAttributes={ setAttributes }\n\t\t\t/>\n\t\t</figure>\n\t);\n}\n\nblock.save = () => null;\n\nregisterBlockType( block.name, block );\n","import block from './block.json';\nimport schema from '../schema.json';\nimport { registerBlockType } from '@wordpress/blocks';\nimport { useBlockProps } from '@wordpress/block-editor';\nimport { Panel, PanelBody, ToggleControl } from '@wordpress/components';\nimport ChartControl from \"../../components/chart-control.js\";\nimport _ from 'lodash';\n\nblock.attributes = _.merge( _.cloneDeep( schema ), block.attributes || {} );\n\nblock.edit = ( { attributes, setAttributes } ) => {\n\treturn (\n\t\t<figure {...useBlockProps( { className: 'c3-chart c3-chart--line' } ) }>\n\t\t\t<ChartControl\n\t\t\t\ttype=\"line\"\n\t\t\t\tattributes={ attributes }\n\t\t\t\tsetAttributes={ setAttributes }\n\t\t\t/>\n\t\t</figure>\n\t);\n}\n\nblock.save = () => null;\n\nregisterBlockType( block.name, block );\n","import block from './block.json';\nimport schema from '../schema.json';\nimport { registerBlockType } from '@wordpress/blocks';\nimport { useBlockProps } from '@wordpress/block-editor';\nimport ChartControl from \"../../components/chart-control.js\";\nimport _ from 'lodash';\n\nblock.attributes = _.merge( _.cloneDeep( schema ), block.attributes || {} );\n\nblock.edit = ( { attributes, setAttributes } ) => {\n\treturn (\n\t\t<figure {...useBlockProps( { className: 'c3-chart c3-chart--pie' } ) }>\n\t\t\t<ChartControl\n\t\t\t\ttype=\"pie\"\n\t\t\t\tattributes={ attributes }\n\t\t\t\tsetAttributes={ setAttributes }\n\t\t\t/>\n\t\t</figure>\n\t)\n}\n\nblock.save = () => null;\n\nregisterBlockType( block.name, block );\n","import block from './block.json';\nimport schema from '../schema.json';\nimport { registerBlockType } from '@wordpress/blocks';\nimport { useBlockProps } from '@wordpress/block-editor';\nimport ChartControl from \"../../components/chart-control.js\";\nimport _ from 'lodash';\n\nblock.attributes = _.merge( _.cloneDeep( schema ), block.attributes || {} );\n\nblock.edit = ( { attributes, setAttributes } ) => {\n\treturn (\n\t\t<figure {...useBlockProps( { className: 'c3-chart c3-chart--spline' } ) }>\n\t\t\t<ChartControl\n\t\t\t\ttype=\"spline\"\n\t\t\t\tattributes={ attributes }\n\t\t\t\tsetAttributes={ setAttributes }\n\t\t\t/>\n\t\t</figure>\n\t);\n}\n\nblock.save = () => null;\n\nregisterBlockType( block.name, block );\n"],"names":["CSVControl","accept","addToGallery","allowedTypes","help","label","labels","title","instructions","onSelect","removeMediaLabel","value","multiple","media","useSelect","select","getMedia","wp","BaseControl","className","MediaUploadCheck","MediaUpload","render","open","Button","onClick","icon","isSecondary","isBusy","style","width","justifyContent","source_url","split","pop","Spinner","fallback","MediaPlaceholder","config","window","wdg","charts","Chart","file","type","attributes","setAttributes","props","data","ref","useRef","useState","setChart","console","log","useEffect","timeout","setTimeout","chartConfig","custom","Object","assign","defaultConfig","axes","axis","y","primary","secondary","y2","show","parseConfig","bindto","current","merge","url","c3","generate","clearTimeout","ChartControl","children","onCSVSelect","attrs","cloneDeep","id","setAttr","attr","set","unsetAttr","unset","getAttr","def","get","InspectorControls","Panel","PanelBody","initialOpen","PanelRow","ToggleControl","checked","onChange","includes","SelectControl","options","position","disabled","grouped","x","format","map","category","index","Flex","key","align","FlexBlock","TextControl","FlexItem","isLink","isDestructive","filter","cat","catIndex","textDecoration","marginBottom","Icon","values","push","text","max","tick","length","val","valIndex","min","rotate","Math","multiline","c3ChartData","headers","concat","header","count","Number","line","grid","lines","lineIndex","regions","region","start","end","r","regionIndex","class","zoom","subchart","BlockControls","Toolbar","MediaReplaceFlow","mediaId","join","name","_","schema","block","edit","useBlockProps","save","controls","groups"],"mappings":"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"}