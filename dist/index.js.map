{"version":3,"file":"index.js","sources":["../src/components/csv-control.js","../src/config.js","../src/helper.js","../src/components/chart.js","../src/components/chart-control.js","../src/components/save.js","../src/blocks/area/index.js","../src/blocks/area-spline/index.js","../src/blocks/bar/index.js","../src/blocks/donut/index.js","../src/blocks/line/index.js","../src/blocks/pie/index.js","../src/blocks/spline/index.js"],"sourcesContent":["import { BaseControl, Button, Spinner } from '@wordpress/components';\nimport { MediaUpload, MediaUploadCheck, MediaPlaceholder } from '@wordpress/block-editor';\nimport { useSelect } from '@wordpress/data';\n\nexport default function CSVControl( {\n\taccept = \"text/csv\", // pass false to accept all types\n\taddToGallery = false,\n\tallowedTypes = [ \"text/csv\" ], // pass null to allow all types\n\thelp,\n\tlabel,\n\tlabels = { title: 'Select CSV File', instructions: '' },\n\tonSelect,\n\tremoveMediaLabel = 'Remove CSV File',\n\tvalue,\n\tmultiple = false,\n} ) {\n\tconst media = useSelect( select => select('core').getMedia( value ), [ value ] );\n\n\treturn (\n\t\t<BaseControl label={ label } help={ help }>\n\t\t\t<div className=\"wikit-charts-csv-control\">\n\t\t\t\t{ value ? (\n\t\t\t\t\t<MediaUploadCheck>\n\t\t\t\t\t\t<MediaUpload\n\t\t\t\t\t\t\tallowedTypes={ allowedTypes }\n\t\t\t\t\t\t\tvalue={ value }\n\t\t\t\t\t\t\tonSelect={ media => onSelect( media ) }\n\t\t\t\t\t\t\trender={ ( { open } ) => (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tonClick={ open }\n\t\t\t\t\t\t\t\t\t\ticon=\"media-spreadsheet\"\n\t\t\t\t\t\t\t\t\t\tisSecondary\n\t\t\t\t\t\t\t\t\t\tisBusy={ value && ! media }\n\t\t\t\t\t\t\t\t\t\tstyle={ { width: '100%', justifyContent: 'center' } }\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{ media ? media.source_url.split('/').pop() : <Spinner /> }\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</MediaUploadCheck>\n\t\t\t\t) : (\n\t\t\t\t\t<MediaUploadCheck fallback=\"You do not have the upload media capability.\">\n\t\t\t\t\t\t<MediaPlaceholder\n\t\t\t\t\t\t\taccept={ accept }\n\t\t\t\t\t\t\taddToGallery={ addToGallery }\n\t\t\t\t\t\t\tallowedTypes={ allowedTypes }\n\t\t\t\t\t\t\tlabels={ labels }\n\t\t\t\t\t\t\tonSelect={ media => onSelect( media ) }\n\t\t\t\t\t\t\tmultiple={ multiple }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</MediaUploadCheck>\n\t\t\t\t) }\n\t\t\t</div>\n\t\t</BaseControl>\n\t)\n}\n","const config = window.wdg.charts.config || {};\n\nexport default config;","import defaultConfig from './config.js';\nimport { createBlock } from '@wordpress/blocks';\n\nexport function parseConfig( config, custom = {} ) {\n\tconst chartConfig = Object.assign( {}, defaultConfig, config, custom );\n\n\tchartConfig.data.axes = chartConfig.data.axes || {};\n\n\tif ( chartConfig.axis && chartConfig.axis.y ) {\n\t\tif ( chartConfig.axis.y.primary ) {\n\t\t\tchartConfig.data.axes[ chartConfig.axis.y.primary ] = 'y';\n\t\t}\n\n\t\tif ( chartConfig.axis.y.secondary ) {\n\t\t\tchartConfig.data.axes[ chartConfig.axis.y.secondary ] = 'y2';\n\t\t\tchartConfig.axis.y2 = { show: true };\n\t\t} else {\n\t\t\tchartConfig.axis.y2 = { show: false };\n\t\t}\n\t}\n\n\t// ignoring caption\n\tif ( chartConfig.hasOwnProperty('caption') ) {\n\t\tdelete chartConfig.caption;\n\t}\n\n\treturn chartConfig;\n}\n\nexport const chartTypes = [\n\t'c3/area-spline',\n\t'c3/area',\n\t'c3/bar',\n\t'c3/donut',\n\t'c3/line',\n\t'c3/pie',\n\t'c3/spline',\n];\n\nexport function getBlockTransform( blockType ) {\n\treturn {\n\t\ttype: 'block',\n\t\tblocks: chartTypes.filter( chartType => chartType !== blockType ),\n\t\ttransform: ( attributes ) => createBlock( blockType, attributes ),\n\t}\n}\n","import c3 from 'c3';\nimport { useSelect } from '@wordpress/data';\nimport { useEffect, useRef, useState } from '@wordpress/element';\nimport { Spinner } from '@wordpress/components';\nimport { parseConfig } from '../helper.js';\nimport { isEqual, merge, cloneDeep } from 'lodash';\nimport config from '../config.js';\n\nexport default function Chart( {\n\tfile = 0,\n\ttype,\n\tattributes,\n\tsetAttributes,\n\t...props\n} ) {\n\tconst data = useSelect( select => select('core').getMedia( file ), [ file ] );\n\tconst ref  = useRef();\n\tconst [ chart, setChart ] = useState(null);\n\tconst [ chartConfig, setChartConfig ] = useState(null);\n\n\tuseEffect( () => {\n\t\tconst timeout = setTimeout( () => {\n\t\t\tif ( data && data.source_url ) {\n\t\t\t\tconst parsedConfig = parseConfig(\n\t\t\t\t\tcloneDeep( attributes ),\n\t\t\t\t\t{\n\t\t\t\t\t\tbindto: ref.current,\n\t\t\t\t\t\tdata: merge(\n\t\t\t\t\t\t\tattributes.data,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\trows: data.c3ChartData.raw,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\t// apply color scheme from global config\n\t\t\t\tif ( config.schemes && config.schemes[ type ] ) {\n\t\t\t\t\tparsedConfig.color = parsedConfig.colors || {};\n\t\t\t\t\tparsedConfig.color.pattern = config.schemes[ type ];\n\t\t\t\t}\n\n\t\t\t\t// special handling for first-column axis\n\t\t\t\tif ( parsedConfig.axis.x.type === 'first-column' && data.c3ChartData && data.c3ChartData.firstColumn ) {\n\t\t\t\t\tparsedConfig.axis.x.type       = 'category';\n\t\t\t\t\tparsedConfig.axis.x.categories = data.c3ChartData.firstColumn.slice( 1 );\n\t\t\t\t\tparsedConfig.data.rows         = parsedConfig.data.rows.map( row => row.slice( 1 ) );\n\n\t\t\t\t\tdelete parsedConfig.data.url;\n\t\t\t\t}\n\n\t\t\t\tif ( ! isEqual( chartConfig, parsedConfig ) ) {\n\t\t\t\t\tsetChartConfig( parsedConfig );\n\t\t\t\t\tsetChart( c3.generate( parsedConfig ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}, 350 );\n\n\t\treturn () => {\n\t\t\tif ( timeout ) {\n\t\t\t\tclearTimeout( timeout );\n\t\t\t}\n\t\t}\n\t}, [\n\t\tdata,\n\t\tref.current,\n\t\tattributes,\n\t] );\n\n\tif ( ! file ) {\n\t\treturn null;\n\t}\n\n\tif ( ! data ) {\n\t\treturn <Spinner />\n\t}\n\n\treturn (\n\t\t<div ref={ ref } {...props} />\n\t);\n}\n","import {\n\tBlockControls,\n\tInspectorControls,\n\tMediaReplaceFlow,\n} from '@wordpress/block-editor';\n\nimport {\n\tBaseControl,\n\tButton,\n\tFlex,\n\tFlexBlock,\n\tFlexItem,\n\tIcon,\n\tPanel,\n\tPanelBody,\n\tPanelRow,\n\tSelectControl,\n\tTextControl,\n\tToggleControl,\n\tToolbar,\n} from '@wordpress/components';\n\nimport { useSelect } from '@wordpress/data';\nimport CSVControl from \"./csv-control.js\";\nimport Chart from \"./chart.js\";\nimport {\n\tcloneDeep,\n\tget,\n\tmerge,\n\tset,\n\tunset,\n} from 'lodash';\n\nconst allowedTypes = [ 'text/csv', 'application/vnd.ms-excel' ];\n\nexport default function ChartControl( {\n\ttype,\n\tattributes,\n\tsetAttributes,\n\tchildren,\n} ) {\n\tconst media = useSelect( select => select('core').getMedia( attributes.file ), [ attributes.file ] );\n\n\tconst onCSVSelect = ( file ) => {\n\t\tconst attrs = cloneDeep( attributes );\n\t\tattrs.file = file.id;\n\t\tattrs.data = merge( attrs.data || {}, { source_url: file.source_url } );\n\t\tsetAttributes( attrs );\n\t}\n\n\tconst setAttr = ( attr, value ) => {\n\t\tconst attrs = cloneDeep( attributes );\n\t\tset( attrs, attr, value );\n\t\tsetAttributes( attrs );\n\t}\n\n\tconst setAttrs = ( attrMap = {} ) => {\n\t\tconst attrs = cloneDeep( attributes );\n\t\tObject.keys( attrMap ).forEach( attr => set( attrs, attr, attrMap[ attr ] ) );\n\t\tsetAttributes( attrs );\n\t}\n\n\tconst unsetAttr = ( attr ) => {\n\t\tconst attrs = cloneDeep( attributes );\n\t\tunset( attrs, attr );\n\t\tsetAttributes( attrs );\n\t}\n\n\tconst getAttr = ( attr, def = '' ) => {\n\t\treturn get( attributes, attr, def );\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<InspectorControls>\n\t\t\t\t<Panel>\n\t\t\t\t\t<PanelBody title=\"Data\" initialOpen>\n\t\t\t\t\t\t<CSVControl\n\t\t\t\t\t\t\tvalue={ getAttr( 'file' ) }\n\t\t\t\t\t\t\tonSelect={ onCSVSelect }\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\tlabel=\"Labels\"\n\t\t\t\t\t\t\t\tchecked={ getAttr( 'data.labels', true ) }\n\t\t\t\t\t\t\t\tonChange={ labels => setAttr( 'data.labels', labels ) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\tlabel=\"Rotate Axes\"\n\t\t\t\t\t\t\t\tchecked={ getAttr( 'axis.rotated' ) }\n\t\t\t\t\t\t\t\tonChange={ rotated => setAttr( 'axis.rotated', rotated ) }\n\t\t\t\t\t\t\t\thelp=\"Switch the X/Y axis. Use this for example to create a horizontal bar chart.\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t</PanelBody>\n\n\t\t\t\t\t{ [ 'line' ].includes( type ) && (\n\t\t\t\t\t\t<PanelBody title=\"Line Chart\" initialOpen>\n\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\tlabel=\"Show Points\"\n\t\t\t\t\t\t\t\tchecked={ getAttr( 'point.show', true ) }\n\t\t\t\t\t\t\t\tonChange={ show => setAttr( 'point.show', show ) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t) }\n\n\t\t\t\t\t<PanelBody title=\"Legend\" initialOpen={ false }>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel=\"Legend\"\n\t\t\t\t\t\t\tchecked={ getAttr( 'legend.show', true ) }\n\t\t\t\t\t\t\tonChange={ show => setAttr( 'legend.show', show ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\tlabel=\"Legend Position\"\n\t\t\t\t\t\t\tvalue={ getAttr( 'legend.position' ) }\n\t\t\t\t\t\t\toptions={ [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: 'Bottom',\n\t\t\t\t\t\t\t\t\tvalue: 'bottom',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: 'Right',\n\t\t\t\t\t\t\t\t\tvalue: 'right',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t] }\n\t\t\t\t\t\t\tonChange={ position => setAttr( 'legend.position', position ) }\n\t\t\t\t\t\t\tdisabled={ ! getAttr( 'legend.show' ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelBody>\n\n\t\t\t\t\t<PanelBody title=\"Tooltip\" initialOpen={ false }>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel=\"Tooltip\"\n\t\t\t\t\t\t\tchecked={ getAttr( 'tooltip.show', true ) }\n\t\t\t\t\t\t\tonChange={ show => setAttr( 'tooltip.show', show ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel=\"Group Tooltip\"\n\t\t\t\t\t\t\tchecked={ getAttr( 'tooltip.grouped', false ) }\n\t\t\t\t\t\t\tonChange={ grouped => setAttr( 'tooltip.grouped', grouped ) }\n\t\t\t\t\t\t\tdisabled={ ! getAttr( 'tooltip.show', true ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelBody>\n\n\t\t\t\t\t{ [ 'line', 'bar', 'spline', 'area', 'area-spline' ].includes( type ) && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<PanelBody title=\"X Axis\" initialOpen={ false }>\n\t\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t\tlabel=\"Show\"\n\t\t\t\t\t\t\t\t\tchecked={ getAttr( 'axis.x.show', true ) }\n\t\t\t\t\t\t\t\t\tonChange={ show => setAttr( 'axis.x.show', show ) }\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\t\t\tlabel=\"Type\"\n\t\t\t\t\t\t\t\t\tvalue={ getAttr( 'axis.x.type', 'indexed' ) }\n\t\t\t\t\t\t\t\t\toptions={ [\n\t\t\t\t\t\t\t\t\t\t{ value: 'indexed', label: 'Default' },\n\t\t\t\t\t\t\t\t\t\t{ value: 'timeseries', label: 'Timeseries' },\n\t\t\t\t\t\t\t\t\t\t{ value: 'category', label: 'Category' },\n\t\t\t\t\t\t\t\t\t\t{ value: 'first-column', label: 'First Column' },\n\t\t\t\t\t\t\t\t\t] }\n\t\t\t\t\t\t\t\t\tonChange={ type => {\n\t\t\t\t\t\t\t\t\t\tconst attrs = cloneDeep( attributes );\n\t\t\t\t\t\t\t\t\t\tattrs.axis.x.type = type;\n\n\t\t\t\t\t\t\t\t\t\tif ( type === 'timeseries' ) {\n\t\t\t\t\t\t\t\t\t\t\tattrs.axis.x.format = '%Y-%m-%d';\n\t\t\t\t\t\t\t\t\t\t\tattrs.data.x = get( media, 'c3ChartData.headers[0]', '' );\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tdelete attrs.axis.x.format;\n\t\t\t\t\t\t\t\t\t\t\tdelete attrs.data.x;\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tsetAttributes( attrs );\n\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\tdisabled={ ! getAttr( 'axis.x.show', false ) }\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t{ getAttr( 'axis.x.type' ) === 'category' && (\n\t\t\t\t\t\t\t\t\t<BaseControl label=\"Categories\" help=\"Enter the categories for the X axis labels\">\n\t\t\t\t\t\t\t\t\t\t{ getAttr( 'axis.x.categories', [] ).map( ( category, index ) => (\n\t\t\t\t\t\t\t\t\t\t\t<Flex key={ index } align=\"center\">\n\t\t\t\t\t\t\t\t\t\t\t\t<FlexBlock>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={ category }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={ category => setAttr( `axis.x.categories[${index}]`, category ) }\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</FlexBlock>\n\t\t\t\t\t\t\t\t\t\t\t\t<FlexItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisLink\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisDestructive\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={ () => setAttr( 'axis.x.categories', getAttr( 'axis.x.categories' ).filter( ( cat, catIndex ) => catIndex !== index ) ) }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={ { textDecoration: 'none', marginBottom: '8px' } }\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon icon=\"dismiss\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t</FlexItem>\n\t\t\t\t\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t\t\t\t) ) }\n\n\t\t\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\tisLink\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst values = [...getAttr( 'axis.x.categories', [] ) ];\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalues.push( '' );\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetAttr( 'axis.x.categories', values );\n\t\t\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\tAdd Category\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t\t\t\t\t</BaseControl>\n\t\t\t\t\t\t\t\t) }\n\n\t\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\t\tlabel=\"Label Text\"\n\t\t\t\t\t\t\t\t\tvalue={ getAttr( 'axis.x.label.text', '' ) }\n\t\t\t\t\t\t\t\t\tonChange={ text => setAttr( 'axis.x.label.text', text ) }\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\t\t\tlabel=\"Label Position\"\n\t\t\t\t\t\t\t\t\toptions={ [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'inner-right',\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Inner Right',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'inner-center',\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Inner Center',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'inner-left',\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Inner Left',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'outer-right',\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Outer Right',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'outer-center',\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Outer Center',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'outer-left',\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Outer Left',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t] }\n\t\t\t\t\t\t\t\t\tvalue={ getAttr( 'axis.x.label.position', 'inner-right' ) }\n\t\t\t\t\t\t\t\t\tonChange={ position => setAttr( 'axis.x.label.position', position ) }\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\t\tlabel=\"Tick Culling\"\n\t\t\t\t\t\t\t\t\thelp=\"Set the maximum number of ticks. 0 means all will be shown.\"\n\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\tvalue={ getAttr( 'axis.x.tick.culling.max', 0 ) }\n\t\t\t\t\t\t\t\t\tonChange={ max => setAttr( 'axis.x.tick.culling.max', max ) }\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<BaseControl label=\"Manual Ticks\" help=\"Manually enter the ticks to be shown. They will automatically be placed on the axis based on the available data.\">\n\t\t\t\t\t\t\t\t\t{ getAttr( 'axis.x.tick.values', [] ).map( ( value, index ) => (\n\t\t\t\t\t\t\t\t\t\t<Flex key={ index } align=\"center\">\n\t\t\t\t\t\t\t\t\t\t\t<FlexBlock>\n\t\t\t\t\t\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={ value }\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={ value => setAttr( `axis.x.tick.values[${index}]`, value ) }\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</FlexBlock>\n\t\t\t\t\t\t\t\t\t\t\t<FlexItem>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tisLink\n\t\t\t\t\t\t\t\t\t\t\t\t\tisDestructive\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// remove attribute when the last tick as c3 interprets as 0 instead of not defined\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ( attributes.axis.x.tick.values.length > 1 ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetAttr( 'axis.x.tick.values', attributes.axis.x.tick.values.filter( ( val, valIndex ) => valIndex !== index ) )\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tunsetAttr( 'axis.x.tick.values' );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={ { textDecoration: 'none', marginBottom: '8px' } }\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon icon=\"dismiss\" />\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</FlexItem>\n\t\t\t\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t\t\t) ) }\n\n\t\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tisLink\n\t\t\t\t\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst values = [...getAttr( 'axis.x.tick.values', [] ) ];\n\t\t\t\t\t\t\t\t\t\t\t\tvalues.push( '' );\n\t\t\t\t\t\t\t\t\t\t\t\tsetAttr( 'axis.x.tick.values', values );\n\t\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tAdd Manual Tick Value\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t\t\t\t</BaseControl>\n\n\t\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\t\tlabel=\"Tick Rotation (Degrees: 0 - 359)\"\n\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t\t\t\tmax=\"359\"\n\t\t\t\t\t\t\t\t\tvalue={ getAttr( 'axis.x.tick.rotate') }\n\t\t\t\t\t\t\t\t\tonChange={ rotate => setAttr( 'axis.x.tick.rotate', Math.min( Math.max( rotate, 0 ), 359 ) ) }\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t\tlabel=\"Multiline Tick\"\n\t\t\t\t\t\t\t\t\tchecked={ getAttr( 'axis.x.tick.multiline', true ) }\n\t\t\t\t\t\t\t\t\tonChange={ multiline => setAttr( 'axis.x.tick.multiline', multiline ) }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PanelBody>\n\n\t\t\t\t\t\t\t<PanelBody title=\"Y Axis\" initialOpen={ false }>\n\t\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t\tlabel=\"Show\"\n\t\t\t\t\t\t\t\t\tchecked={ getAttr( 'axis.y.show', true ) }\n\t\t\t\t\t\t\t\t\tonChange={ show => setAttr( 'axis.y.show', show ) }\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\t\tlabel=\"Label Text\"\n\t\t\t\t\t\t\t\t\tvalue={ getAttr( 'axis.y.label.text', '' ) }\n\t\t\t\t\t\t\t\t\tonChange={ text => setAttr( 'axis.y.label.text', text ) }\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\t\t\tlabel=\"Label Position\"\n\t\t\t\t\t\t\t\t\toptions={ [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'inner-top',\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Inner Top',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'inner-middle',\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Inner Middle',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'inner-bottom',\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Inner Bottom',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'outer-top',\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Outer Top',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'outer-middle',\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Outer Middle',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'outer-bottom',\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Outer Bottom',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t] }\n\t\t\t\t\t\t\t\t\tvalue={ getAttr( 'axis.y.label.position', 'inner-top' ) }\n\t\t\t\t\t\t\t\t\tonChange={ position => setAttr( 'axis.y.label.position', position ) }\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t{ media && media.c3ChartData && media.c3ChartData.headers && (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Primary Y Axis\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={ getAttr( 'axis.y.primary', '' ) }\n\t\t\t\t\t\t\t\t\t\t\toptions={ [ { value: '', label: 'Default' } ].concat( media.c3ChartData.headers.map( header => ( { value: header, label: header } ) ) ) }\n\t\t\t\t\t\t\t\t\t\t\tonChange={ primary => setAttr( 'axis.y.primary', primary ) }\n\t\t\t\t\t\t\t\t\t\t\tdisabled={ ! getAttr( 'axis.y.show', true ) }\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Secondary Y Axis\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={ getAttr( 'axis.y.secondary' ) }\n\t\t\t\t\t\t\t\t\t\t\toptions={ [ { value: '', label: 'None' } ].concat( media.c3ChartData.headers.map( header => ( { value: header, label: header } ) ) ) }\n\t\t\t\t\t\t\t\t\t\t\tonChange={ secondary => setAttr( 'axis.y.secondary', secondary ) }\n\t\t\t\t\t\t\t\t\t\t\tdisabled={ ! getAttr( 'axis.y.show', true ) }\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t) }\n\n\t\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\t\tlabel=\"Tick Count\"\n\t\t\t\t\t\t\t\t\thelp=\"Set the number of y axis ticks. Leave empty to automatically calculate tick values.\"\n\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\tvalue={ getAttr( 'axis.y.tick.count', 0 ) > 0 ? getAttr( 'axis.y.tick.count' ) : '' }\n\t\t\t\t\t\t\t\t\tonChange={ count => setAttr( 'axis.y.tick.count', Number( count ) ) }\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<BaseControl label=\"Manual Ticks\" help=\"Manually enter the ticks to be shown. They will automatically be placed on the axis based on the available data.\">\n\t\t\t\t\t\t\t\t\t{ getAttr( 'axis.y.tick.values', [] ).map( ( value, index ) => (\n\t\t\t\t\t\t\t\t\t\t<Flex key={ index } align=\"center\">\n\t\t\t\t\t\t\t\t\t\t\t<FlexBlock>\n\t\t\t\t\t\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={ value }\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={ value => setAttr( `axis.y.tick.values[${index}]`, value ) }\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</FlexBlock>\n\t\t\t\t\t\t\t\t\t\t\t<FlexItem>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tisLink\n\t\t\t\t\t\t\t\t\t\t\t\t\tisDestructive\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// remove attribute when the last tick as c3 interprets as 0 instead of not defined\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ( attributes.axis.y.tick.values.length > 1 ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetAttr( 'axis.y.tick.values', attributes.axis.y.tick.values.filter( ( val, valIndex ) => valIndex !== index ) )\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tunsetAttr( 'axis.y.tick.values' );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={ { textDecoration: 'none', marginBottom: '8px' } }\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon icon=\"dismiss\" />\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</FlexItem>\n\t\t\t\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t\t\t) ) }\n\n\t\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tisLink\n\t\t\t\t\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst values = [...getAttr( 'axis.y.tick.values', [] ) ];\n\t\t\t\t\t\t\t\t\t\t\t\tvalues.push( '' );\n\t\t\t\t\t\t\t\t\t\t\t\tsetAttr( 'axis.y.tick.values', values );\n\t\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tAdd Manual Tick Value\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t\t\t\t</BaseControl>\n\t\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) }\n\n\t\t\t\t\t{ [ 'line', 'bar', 'area', 'area-spline', 'spline' ].includes( type ) && (\n\t\t\t\t\t\t<PanelBody title=\"Grid\" initialOpen={ false }>\n\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t\tlabel=\"Show X Axis Grid\"\n\t\t\t\t\t\t\t\t\tchecked={ getAttr( 'grid.x.show', false ) }\n\t\t\t\t\t\t\t\t\tonChange={ show => setAttr( 'grid.x.show', show ) }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t\t{ getAttr( 'grid.x.lines', [] ).length ?\n\t\t\t\t\t\t\t\tgetAttr( 'grid.x.lines' ).map( ( line, index ) => (\n\t\t\t\t\t\t\t\t\t<div key={ index }>\n\t\t\t\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Line Value\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={ line.value }\n\t\t\t\t\t\t\t\t\t\t\tonChange={ value => setAttr( `grid.x.lines[${index}].value`, value ) }\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Line Label\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={ line.text }\n\t\t\t\t\t\t\t\t\t\t\tonChange={ text => setAttr( `grid.x.lines[${index}].text`, text ) }\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Label Position\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={ line.position }\n\t\t\t\t\t\t\t\t\t\t\tonChange={ position => setAttr( `grid.x.lines[${index}].position`, position ) }\n\t\t\t\t\t\t\t\t\t\t\toptions={ [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: 'End',\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'middle',\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: 'Middle',\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'start',\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: 'Start',\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t] }\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tisLink\n\t\t\t\t\t\t\t\t\t\t\tisDestructive\n\t\t\t\t\t\t\t\t\t\t\tonClick={ () => setAttr( 'grid.x.lines', attributes.grid.x.lines.filter( ( line, lineIndex ) => lineIndex !== index ) ) }\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tRemove Grid Line\n\t\t\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) ) : null\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tisLink\n\t\t\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\t\t\tconst lines = [...attributes.grid.x.lines];\n\t\t\t\t\t\t\t\t\t\tlines.push( {\n\t\t\t\t\t\t\t\t\t\t\tvalue: 0,\n\t\t\t\t\t\t\t\t\t\t\ttext: 'Grid Line',\n\t\t\t\t\t\t\t\t\t\t\tposition: ''\n\t\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t\t\tsetAttr( 'grid.x.lines', lines );\n\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tAdd X Grid Line\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t\tlabel=\"Show Y Axis Grid\"\n\t\t\t\t\t\t\t\t\tchecked={ getAttr( 'grid.y.show', false ) }\n\t\t\t\t\t\t\t\t\tonChange={ show => setAttr( 'grid.y.show', show ) }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t\t{ getAttr( 'grid.y.lines', [] ).length ?\n\t\t\t\t\t\t\t\tgetAttr( 'grid.y.lines' ).map( ( line, index ) => (\n\t\t\t\t\t\t\t\t\t<div key={ index }>\n\t\t\t\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Line Value\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={ line.value }\n\t\t\t\t\t\t\t\t\t\t\tonChange={ value => setAttr( `grid.y.lines[${index}].value`, value ) }\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Line Label\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={ line.text }\n\t\t\t\t\t\t\t\t\t\t\tonChange={ value => setAttr( `grid.y.lines[${index}].text`, value ) }\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Label Position\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={ line.position }\n\t\t\t\t\t\t\t\t\t\t\tonChange={ position => setAttr( `grid.x.lines[${index}].position`, position ) }\n\t\t\t\t\t\t\t\t\t\t\toptions={ [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: 'End',\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'middle',\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: 'Middle',\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'start',\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: 'Start',\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t] }\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tisLink\n\t\t\t\t\t\t\t\t\t\t\tisDestructive\n\t\t\t\t\t\t\t\t\t\t\tonClick={ () => setAttr( 'grid.y.lines', attributes.grid.y.lines.filter( ( line, lineIndex ) => lineIndex !== index ) ) }\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tRemove Grid Line\n\t\t\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) ) : null\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tisLink\n\t\t\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\t\t\tconst lines = [...attributes.grid.y.lines];\n\t\t\t\t\t\t\t\t\t\tlines.push( {\n\t\t\t\t\t\t\t\t\t\t\tvalue: 0,\n\t\t\t\t\t\t\t\t\t\t\ttext: 'Grid Line',\n\t\t\t\t\t\t\t\t\t\t\tposition: ''\n\t\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t\t\tsetAttr( 'grid.y.lines', lines );\n\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tAdd Y Grid Line\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t) }\n\n\t\t\t\t\t{ [ 'line', 'bar', 'area', 'area-spline', 'spline' ].includes( type ) && (\n\t\t\t\t\t\t<PanelBody title=\"Regions\" initialOpen={ false }>\n\t\t\t\t\t\t\t{ attributes.regions && attributes.regions.map( ( region, index ) => (\n\t\t\t\t\t\t\t\t<div key={ index }>\n\t\t\t\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\t\t\t\tlabel=\"Axis\"\n\t\t\t\t\t\t\t\t\t\tvalue={ region.axis }\n\t\t\t\t\t\t\t\t\t\tonChange={ value => setAttr( `regions[${index}].axis`, value ) }\n\t\t\t\t\t\t\t\t\t\toptions={ [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'x',\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: 'X Axis',\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'y',\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: 'Y Axis',\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'y2',\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: 'Secondary Y Axis',\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled: ! getAttr( 'axis.y.secondary', false ),\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t] }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\t\t\tlabel=\"Start\"\n\t\t\t\t\t\t\t\t\t\tvalue={ region.start }\n\t\t\t\t\t\t\t\t\t\tonChange={ start => setAttr( `regions[${index}].start`, start ) }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\t\t\tlabel=\"End\"\n\t\t\t\t\t\t\t\t\t\tvalue={ region.end }\n\t\t\t\t\t\t\t\t\t\tonChange={ end => setAttr( `regions[${index}].end`, end ) }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tisLink\n\t\t\t\t\t\t\t\t\t\tisDestructive\n\t\t\t\t\t\t\t\t\t\tonClick={ () => setAttr( 'regions', attributes.regions.filter( r, regionIndex => regionIndex !== index ) ) }\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tRemove Region\n\t\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) ) }\n\n\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tisLink\n\t\t\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\t\t\tconst regions = [...attributes.regions];\n\t\t\t\t\t\t\t\t\t\tregions.push( {\n\t\t\t\t\t\t\t\t\t\t\taxis: 'x',\n\t\t\t\t\t\t\t\t\t\t\tstart: 0,\n\t\t\t\t\t\t\t\t\t\t\tend: 10,\n\t\t\t\t\t\t\t\t\t\t\tclass: '',\n\t\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t\t\tsetAttr( 'regions', regions );\n\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tAdd Region\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t) }\n\n\t\t\t\t\t<PanelBody title=\"Experimental\" initialOpen={ false }>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel=\"Zoom Enabled\"\n\t\t\t\t\t\t\tchecked={ attributes.zoom }\n\t\t\t\t\t\t\tonChange={ zoom => setAttr( 'zoom', zoom ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel=\"Sub Chart\"\n\t\t\t\t\t\t\tchecked={ attributes.subchart }\n\t\t\t\t\t\t\tonChange={ subchart => setAttr( 'subchart', subchart ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</Panel>\n\t\t\t</InspectorControls>\n\n\t\t\t<BlockControls>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<MediaReplaceFlow\n\t\t\t\t\t\tmedia={ media && media.source_url ? media.source_url : '' }\n\t\t\t\t\t\tmediaId={ attributes.file }\n\t\t\t\t\t\tallowedTypes={ allowedTypes }\n\t\t\t\t\t\taccept={ allowedTypes.join(',') }\n\t\t\t\t\t\tonSelect={ onCSVSelect }\n\t\t\t\t\t\tname={ attributes.file ? 'Replace CSV Data File' : 'Select CSV Data File' }\n\t\t\t\t\t/>\n\t\t\t\t</Toolbar>\n\t\t\t</BlockControls>\n\n\t\t\t{ attributes.file ? (\n\t\t\t\tchildren ? (\n\t\t\t\t\tchildren\n\t\t\t\t) : (\n\t\t\t\t\t<Chart\n\t\t\t\t\t\ttype={ type }\n\t\t\t\t\t\tfile={ attributes.file }\n\t\t\t\t\t\tattributes={ attributes }\n\t\t\t\t\t\tsetAttributes={ setAttributes }\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t) : (\n\t\t\t\t<CSVControl\n\t\t\t\t\tvalue={ attributes.file }\n\t\t\t\t\tonSelect={ onCSVSelect }\n\t\t\t\t/>\n\t\t\t) }\n\t\t</>\n\t);\n}\n","import { RichText } from '@wordpress/block-editor';\n\nexport default function save( { attributes } ) {\n\tif ( attributes.caption ) {\n\t\treturn (\n\t\t\t<RichText.Content\n\t\t\t\ttagName=\"figcaption\"\n\t\t\t\tclassName=\"c3-chart__caption\"\n\t\t\t\tvalue={ attributes.caption }\n\t\t\t/>\n\t\t);\n\t}\n\n\treturn null;\n};\n","import block from './block.json';\nimport schema from '../schema.json';\nimport { registerBlockType } from '@wordpress/blocks';\nimport { useBlockProps, RichText } from '@wordpress/block-editor';\nimport ChartControl from \"../../components/chart-control.js\";\nimport { merge, cloneDeep } from 'lodash';\nimport save from '../../components/save.js';\nimport { getBlockTransform } from '../../helper.js';\n\nblock.attributes = merge( cloneDeep( schema ), block.attributes || {} );\n\nblock.edit = ( { attributes, setAttributes } ) => {\n\treturn (\n\t\t<figure {...useBlockProps( { className: 'c3-chart c3-chart--area' } ) }>\n\t\t\t<ChartControl\n\t\t\t\ttype=\"area\"\n\t\t\t\tattributes={ attributes }\n\t\t\t\tsetAttributes={ setAttributes }\n\t\t\t/>\n\t\t\t<RichText\n\t\t\t\ttagName=\"figcaption\"\n\t\t\t\tclassName=\"c3-chart__caption\"\n\t\t\t\tvalue={ attributes.caption }\n\t\t\t\tonChange={ caption => setAttributes( { caption } ) }\n\t\t\t\tallowedFormats={ [\n\t\t\t\t\t'core/link',\n\t\t\t\t\t'core/bold',\n\t\t\t\t\t'core/italic',\n\t\t\t\t] }\n\t\t\t\tplaceholder=\"Chart caption...\"\n\t\t\t\tkeepPlaceholderOnFocus\n\t\t\t/>\n\t\t</figure>\n\t);\n}\n\nblock.save = save;\n\nblock.transforms = {\n\tfrom: [\n\t\tgetBlockTransform( block.name ),\n\t],\n}\n\nregisterBlockType( block.name, block );\n","import block from './block.json';\nimport schema from '../schema.json';\nimport { registerBlockType } from '@wordpress/blocks';\nimport { useBlockProps, RichText } from '@wordpress/block-editor';\nimport ChartControl from \"../../components/chart-control.js\";\nimport { merge, cloneDeep } from 'lodash';\nimport save from '../../components/save.js';\nimport { getBlockTransform } from '../../helper.js';\n\nblock.attributes = merge( cloneDeep( schema ), block.attributes || {} );\n\nblock.edit = ( { attributes, setAttributes } ) => {\n\treturn (\n\t\t<figure {...useBlockProps( { className: 'c3-chart c3-chart--area-spline' } ) }>\n\t\t\t<ChartControl\n\t\t\t\ttype=\"area-spline\"\n\t\t\t\tattributes={ attributes }\n\t\t\t\tsetAttributes={ setAttributes }\n\t\t\t/>\n\t\t\t<RichText\n\t\t\t\ttagName=\"figcaption\"\n\t\t\t\tclassName=\"c3-chart__caption\"\n\t\t\t\tvalue={ attributes.caption }\n\t\t\t\tonChange={ caption => setAttributes( { caption } ) }\n\t\t\t\tallowedFormats={ [\n\t\t\t\t\t'core/link',\n\t\t\t\t\t'core/bold',\n\t\t\t\t\t'core/italic',\n\t\t\t\t] }\n\t\t\t\tplaceholder=\"Chart caption...\"\n\t\t\t\tkeepPlaceholderOnFocus\n\t\t\t/>\n\t\t</figure>\n\t);\n}\n\nblock.save = save;\n\nblock.transforms = {\n\tfrom: [\n\t\tgetBlockTransform( block.name ),\n\t],\n}\n\nregisterBlockType( block.name, block );\n","import block from './block.json';\nimport schema from '../schema.json';\nimport { registerBlockType } from '@wordpress/blocks';\nimport { useBlockProps, RichText } from '@wordpress/block-editor';\nimport ChartControl from \"../../components/chart-control.js\";\nimport { PanelBody, ToggleControl, Spinner } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\nimport _ from 'lodash';\nimport save from '../../components/save.js';\nimport { getBlockTransform } from '../../helper.js';\n\nblock.attributes = _.merge( _.cloneDeep( schema ), block.attributes || {} );\n\nblock.edit = ( { attributes, setAttributes } ) => {\n\tconst media = useSelect( select => select('core').getMedia( attributes.file ), [ attributes.file ] );\n\n\treturn (\n\t\t<figure {...useBlockProps( { className: 'c3-chart c3-chart--bar' } ) }>\n\t\t\t<ChartControl\n\t\t\t\ttype=\"bar\"\n\t\t\t\tattributes={ attributes }\n\t\t\t\tsetAttributes={ setAttributes }\n\t\t\t\tcontrols={ () => (\n\t\t\t\t\t<PanelBody title=\"Bar Chart\" initialOpen icon={ block.icon }>\n\t\t\t\t\t\t{ media ? (\n\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\tlabel=\"Stacked Bar Chart\"\n\t\t\t\t\t\t\t\tchecked={ attributes.data && attributes.data.groups && attributes.data.groups.length > 0 }\n\t\t\t\t\t\t\t\tonChange={ checked => {\n\t\t\t\t\t\t\t\t\tconst attr = cloneDeep( attributes );\n\t\t\t\t\t\t\t\t\tattr.data = attr.data || {};\n\t\t\t\t\t\t\t\t\tattr.data.groups = checked ? [ media.c3ChartData.headers ] : [];\n\t\t\t\t\t\t\t\t\tsetAttributes( attr );\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : <Spinner /> }\n\t\t\t\t\t</PanelBody>\n\t\t\t\t) }\n\t\t\t/>\n\t\t\t<RichText\n\t\t\t\ttagName=\"figcaption\"\n\t\t\t\tclassName=\"c3-chart__caption\"\n\t\t\t\tvalue={ attributes.caption }\n\t\t\t\tonChange={ caption => setAttributes( { caption } ) }\n\t\t\t\tallowedFormats={ [\n\t\t\t\t\t'core/link',\n\t\t\t\t\t'core/bold',\n\t\t\t\t\t'core/italic',\n\t\t\t\t] }\n\t\t\t\tplaceholder=\"Chart caption...\"\n\t\t\t\tkeepPlaceholderOnFocus\n\t\t\t/>\n\t\t</figure>\n\t);\n}\n\nblock.save = save;\n\nblock.transforms = {\n\tfrom: [\n\t\tgetBlockTransform( block.name ),\n\t],\n}\n\nregisterBlockType( block.name, block );\n","import block from './block.json';\nimport schema from '../schema.json';\nimport { registerBlockType } from '@wordpress/blocks';\nimport { useBlockProps, RichText } from '@wordpress/block-editor';\nimport ChartControl from \"../../components/chart-control.js\";\nimport { merge, cloneDeep } from 'lodash';\nimport save from '../../components/save.js';\nimport { getBlockTransform } from '../../helper.js';\n\nblock.attributes = merge( cloneDeep( schema ), block.attributes || {} );\n\nblock.edit = ( { attributes, setAttributes } ) => {\n\treturn (\n\t\t<figure {...useBlockProps( { className: 'c3-chart c3-chart--donut' } ) }>\n\t\t\t<ChartControl\n\t\t\t\ttype=\"donut\"\n\t\t\t\tattributes={ attributes }\n\t\t\t\tsetAttributes={ setAttributes }\n\t\t\t/>\n\t\t\t<RichText\n\t\t\t\ttagName=\"figcaption\"\n\t\t\t\tclassName=\"c3-chart__caption\"\n\t\t\t\tvalue={ attributes.caption }\n\t\t\t\tonChange={ caption => setAttributes( { caption } ) }\n\t\t\t\tallowedFormats={ [\n\t\t\t\t\t'core/link',\n\t\t\t\t\t'core/bold',\n\t\t\t\t\t'core/italic',\n\t\t\t\t] }\n\t\t\t\tplaceholder=\"Chart caption...\"\n\t\t\t\tkeepPlaceholderOnFocus\n\t\t\t/>\n\t\t</figure>\n\t);\n}\n\nblock.save = save;\n\nblock.transforms = {\n\tfrom: [\n\t\tgetBlockTransform( block.name ),\n\t],\n}\n\nregisterBlockType( block.name, block );\n","import block from './block.json';\nimport schema from '../schema.json';\nimport { registerBlockType } from '@wordpress/blocks';\nimport { useBlockProps, RichText } from '@wordpress/block-editor';\nimport ChartControl from \"../../components/chart-control.js\";\nimport { merge, cloneDeep } from 'lodash';\nimport save from '../../components/save.js';\nimport { getBlockTransform } from '../../helper.js';\n\nblock.attributes = merge( cloneDeep( schema ), block.attributes || {} );\n\nblock.edit = ( { attributes, setAttributes } ) => {\n\treturn (\n\t\t<figure {...useBlockProps( { className: 'c3-chart c3-chart--line' } ) }>\n\t\t\t<ChartControl\n\t\t\t\ttype=\"line\"\n\t\t\t\tattributes={ attributes }\n\t\t\t\tsetAttributes={ setAttributes }\n\t\t\t/>\n\t\t\t<RichText\n\t\t\t\ttagName=\"figcaption\"\n\t\t\t\tclassName=\"c3-chart__caption\"\n\t\t\t\tvalue={ attributes.caption }\n\t\t\t\tonChange={ caption => setAttributes( { caption } ) }\n\t\t\t\tallowedFormats={ [\n\t\t\t\t\t'core/link',\n\t\t\t\t\t'core/bold',\n\t\t\t\t\t'core/italic',\n\t\t\t\t] }\n\t\t\t\tplaceholder=\"Chart caption...\"\n\t\t\t\tkeepPlaceholderOnFocus\n\t\t\t/>\n\t\t</figure>\n\t);\n}\n\nblock.save = save;\n\nblock.transforms = {\n\tfrom: [\n\t\tgetBlockTransform( block.name ),\n\t],\n}\n\nregisterBlockType( block.name, block );\n","import block from './block.json';\nimport schema from '../schema.json';\nimport { registerBlockType } from '@wordpress/blocks';\nimport { useBlockProps, RichText } from '@wordpress/block-editor';\nimport ChartControl from \"../../components/chart-control.js\";\nimport { merge, cloneDeep } from 'lodash';\nimport save from '../../components/save.js';\nimport { getBlockTransform } from '../../helper.js';\n\nblock.attributes = merge( cloneDeep( schema ), block.attributes || {} );\n\nblock.edit = ( { attributes, setAttributes } ) => {\n\treturn (\n\t\t<figure {...useBlockProps( { className: 'c3-chart c3-chart--pie' } ) }>\n\t\t\t<ChartControl\n\t\t\t\ttype=\"pie\"\n\t\t\t\tattributes={ attributes }\n\t\t\t\tsetAttributes={ setAttributes }\n\t\t\t/>\n\t\t\t<RichText\n\t\t\t\ttagName=\"figcaption\"\n\t\t\t\tclassName=\"c3-chart__caption\"\n\t\t\t\tvalue={ attributes.caption }\n\t\t\t\tonChange={ caption => setAttributes( { caption } ) }\n\t\t\t\tallowedFormats={ [\n\t\t\t\t\t'core/link',\n\t\t\t\t\t'core/bold',\n\t\t\t\t\t'core/italic',\n\t\t\t\t] }\n\t\t\t\tplaceholder=\"Chart caption...\"\n\t\t\t\tkeepPlaceholderOnFocus\n\t\t\t/>\n\t\t</figure>\n\t)\n}\n\nblock.save = save;\n\nblock.transforms = {\n\tfrom: [\n\t\tgetBlockTransform( block.name ),\n\t],\n}\n\nregisterBlockType( block.name, block );\n","import block from './block.json';\nimport schema from '../schema.json';\nimport { registerBlockType } from '@wordpress/blocks';\nimport { useBlockProps, RichText } from '@wordpress/block-editor';\nimport ChartControl from \"../../components/chart-control.js\";\nimport { merge, cloneDeep } from 'lodash';\nimport save from '../../components/save.js';\nimport { getBlockTransform } from '../../helper.js';\n\nblock.attributes = merge( cloneDeep( schema ), block.attributes || {} );\n\nblock.edit = ( { attributes, setAttributes } ) => {\n\treturn (\n\t\t<figure {...useBlockProps( { className: 'c3-chart c3-chart--spline' } ) }>\n\t\t\t<ChartControl\n\t\t\t\ttype=\"spline\"\n\t\t\t\tattributes={ attributes }\n\t\t\t\tsetAttributes={ setAttributes }\n\t\t\t/>\n\t\t\t<RichText\n\t\t\t\ttagName=\"figcaption\"\n\t\t\t\tclassName=\"c3-chart__caption\"\n\t\t\t\tvalue={ attributes.caption }\n\t\t\t\tonChange={ caption => setAttributes( { caption } ) }\n\t\t\t\tallowedFormats={ [\n\t\t\t\t\t'core/link',\n\t\t\t\t\t'core/bold',\n\t\t\t\t\t'core/italic',\n\t\t\t\t] }\n\t\t\t\tplaceholder=\"Chart caption...\"\n\t\t\t\tkeepPlaceholderOnFocus\n\t\t\t/>\n\t\t</figure>\n\t);\n}\n\nblock.save = save;\n\nblock.transforms = {\n\tfrom: [\n\t\tgetBlockTransform( block.name ),\n\t],\n}\n\nregisterBlockType( block.name, block );\n"],"names":["CSVControl","accept","addToGallery","allowedTypes","help","label","labels","title","instructions","onSelect","removeMediaLabel","value","multiple","media","useSelect","select","getMedia","wp","BaseControl","className","MediaUploadCheck","MediaUpload","render","open","Button","onClick","icon","isSecondary","isBusy","style","width","justifyContent","source_url","split","pop","Spinner","fallback","MediaPlaceholder","config","window","wdg","charts","chartTypes","getBlockTransform","blockType","type","blocks","filter","chartType","transform","attributes","createBlock","Chart","file","setAttributes","props","data","ref","useRef","useState","setChart","chartConfig","setChartConfig","useEffect","timeout","setTimeout","parsedConfig","custom","Object","assign","defaultConfig","axes","axis","y","primary","secondary","y2","show","hasOwnProperty","caption","parseConfig","cloneDeep","bindto","current","merge","rows","c3ChartData","raw","schemes","color","colors","pattern","x","firstColumn","categories","slice","map","row","url","isEqual","c3","generate","clearTimeout","ChartControl","children","onCSVSelect","attrs","id","setAttr","attr","set","unsetAttr","unset","getAttr","def","get","InspectorControls","Panel","PanelBody","initialOpen","PanelRow","ToggleControl","checked","onChange","rotated","includes","SelectControl","options","position","disabled","grouped","format","category","index","Flex","key","align","FlexBlock","TextControl","FlexItem","isLink","isDestructive","cat","catIndex","textDecoration","marginBottom","Icon","values","push","text","max","tick","length","val","valIndex","min","rotate","Math","multiline","headers","concat","header","count","Number","line","grid","lines","lineIndex","regions","region","start","end","r","regionIndex","class","zoom","subchart","BlockControls","Toolbar","MediaReplaceFlow","mediaId","join","name","save","RichText","Content","tagName","schema","block","edit","useBlockProps","allowedFormats","placeholder","keepPlaceholderOnFocus","transforms","from","_","controls","groups"],"mappings":"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"}